{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Twitter API v2 available endpoints",
    "version" : "2.142",
    "title" : "Twitter API v2",
    "termsOfService" : "https://developer.twitter.com/en/developer-terms/agreement-and-policy.html",
    "contact" : {
      "name" : "Twitter Developers",
      "url" : "https://developer.twitter.com/"
    },
    "license" : {
      "name" : "Twitter Developer Agreement and Policy",
      "url" : "https://developer.twitter.com/en/developer-terms/agreement-and-policy.html"
    }
  },
  "paths" : {
    "/2/account_activity/replay/webhooks/{webhook_id}/subscriptions/all" : {
      "post" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "AAASubscriptions"
        ],
        "summary" : "Request Activity Replay",
        "description" : "Submits a request to retrieve activities from up to the past five days for all subscriptions associated with the specified webhook during the date and time windows provided.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "postAccountActivityReplay",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The unique identifier for the webhook configuration.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          },
          {
            "name" : "from_date",
            "in" : "query",
            "description" : "The oldest (starting) UTC timestamp (inclusive) from which events will be provided, in `yyyymmddhhmm` format.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "pattern" : "^\\d{12}$",
              "example" : "202504242000"
            },
            "style" : "form"
          },
          {
            "name" : "to_date",
            "in" : "query",
            "description" : "The latest (ending) UTC timestamp (exclusive) up to which events will be provided, in `yyyymmddhhmm` format.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "pattern" : "^\\d{12}$",
              "example" : "202504242200"
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReplayJobCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/account_activity/subscriptions/count" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "AAASubscriptions"
        ],
        "summary" : "Get a count of subscriptions that are currently active on your account",
        "description" : "Get a count of subscriptions that are currently active on your account.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "getSubscriptionCount",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsCountGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/account_activity/webhooks/{webhook_id}/subscriptions/all" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "AAASubscriptions"
        ],
        "summary" : "Check if a subscription exists for a given webhook and user",
        "description" : "Check if a subscription exists for a given webhook and user.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "getSubscription",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The webhook ID to check subscription against.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "AAASubscriptions"
        ],
        "summary" : "Subscribes the provided application to all events for the provided user context for all message types",
        "description" : "Subscribes the provided application to all events for the provided user context for all message types.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "postSubscription",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The webhook ID to check subscription against.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionsCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/account_activity/webhooks/{webhook_id}/subscriptions/all/list" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "AAASubscriptions"
        ],
        "summary" : "Get a list of the current All Activity type subscriptions for the specified webhook",
        "description" : "Get a list of the current All Activity type subscriptions for the specified webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "getSubscriptionList",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The webhook ID to pull subscriptions for.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsListGetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/account_activity/webhooks/{webhook_id}/subscriptions/{user_id}/all" : {
      "delete" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "AAASubscriptions"
        ],
        "summary" : "Deactivates a subscription for the specified webhook and user id",
        "description" : "Deactivates a subscription for the specified webhook and user id.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/account-activity/introduction"
        },
        "operationId" : "deleteSubscription",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The webhook ID to check subscription against.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          },
          {
            "name" : "user_id",
            "in" : "path",
            "description" : "User ID to unsubscribe from.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionsDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/communities/search" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Communities"
        ],
        "summary" : "Search Communities",
        "description" : "Returns Communities that match search query",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "communitiesSearch",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "Query to search communities.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 4096,
              "example" : "Love"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of search results to be returned by a request.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 10,
              "maximum" : 100,
              "format" : "int32",
              "default" : 10
            },
            "style" : "form"
          },
          {
            "name" : "next_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/NextToken"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/NextToken"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/CommunityFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2CommunitiesSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/communities/{id}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Communities"
        ],
        "summary" : "Communities lookup by Community ID.",
        "description" : "Returns a Community.",
        "externalDocs" : {
          "url" : "https://developer.x.com/en/docs/x-api/communities/api-reference/get-communities-id"
        },
        "operationId" : "communityIdGet",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the Community.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/CommunityId"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/CommunityFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2CommunitiesIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/compliance/jobs" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "List Compliance Jobs",
        "description" : "Returns recent Compliance Jobs for a given job type and optional job status",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs"
        },
        "operationId" : "listBatchComplianceJobs",
        "parameters" : [
          {
            "name" : "type",
            "in" : "query",
            "description" : "Type of Compliance Job to list.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "enum" : [
                "tweets",
                "users"
              ]
            },
            "style" : "form"
          },
          {
            "name" : "status",
            "in" : "query",
            "description" : "Status of Compliance Job to list.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "created",
                "in_progress",
                "failed",
                "complete"
              ]
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/ComplianceJobFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ComplianceJobsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "Create compliance job",
        "description" : "Creates a compliance for the given job type",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs"
        },
        "operationId" : "createBatchComplianceJob",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateComplianceJobRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateComplianceJobResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/compliance/jobs/{id}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "Get Compliance Job",
        "description" : "Returns a single Compliance Job by ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs-id"
        },
        "operationId" : "getBatchComplianceJob",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the Compliance Job to retrieve.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/JobId"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/ComplianceJobFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ComplianceJobsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/connections/all" : {
      "delete" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Connection"
        ],
        "summary" : "Force kills all streaming connections of the authenticated application.",
        "description" : "Force kills all streaming connections of the authenticated application.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "killAllAppConnections",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KillAllConnectionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_conversations" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Create a new DM Conversation",
        "description" : "Creates a new DM Conversation.",
        "operationId" : "dmConversationIdCreate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDmConversationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_conversations/with/{participant_id}/dm_events" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Get DM Events for a DM Conversation",
        "description" : "Returns DM Events for a DM Conversation",
        "operationId" : "getDmEventsByParticipantId",
        "parameters" : [
          {
            "name" : "participant_id",
            "in" : "path",
            "description" : "The ID of the participant user for the One to One DM conversation.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "name" : "event_types",
            "in" : "query",
            "description" : "The set of event_types to include in the results.",
            "required" : false,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "MessageCreate",
                  "ParticipantsJoin",
                  "ParticipantsLeave"
                ]
              },
              "default" : [
                "MessageCreate",
                "ParticipantsLeave",
                "ParticipantsJoin"
              ],
              "example" : [
                "MessageCreate",
                "ParticipantsLeave"
              ]
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/DmEventFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/DmEventExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmConversationsWithParticipantIdDmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_conversations/with/{participant_id}/messages" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Send a new message to a user",
        "description" : "Creates a new message for a DM Conversation with a participant user by ID",
        "operationId" : "dmConversationWithUserEventIdCreate",
        "parameters" : [
          {
            "name" : "participant_id",
            "in" : "path",
            "description" : "The ID of the recipient user that will receive the DM.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_conversations/{dm_conversation_id}/messages" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Send a new message to a DM Conversation",
        "description" : "Creates a new message for a DM Conversation specified by DM Conversation ID",
        "operationId" : "dmConversationByIdEventIdCreate",
        "parameters" : [
          {
            "name" : "dm_conversation_id",
            "in" : "path",
            "description" : "The DM Conversation ID.",
            "required" : true,
            "schema" : {
              "type" : "string"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_conversations/{id}/dm_events" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Get DM Events for a DM Conversation",
        "description" : "Returns DM Events for a DM Conversation",
        "operationId" : "getDmConversationsIdDmEvents",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The DM Conversation ID.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/DmConversationId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "name" : "event_types",
            "in" : "query",
            "description" : "The set of event_types to include in the results.",
            "required" : false,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "MessageCreate",
                  "ParticipantsJoin",
                  "ParticipantsLeave"
                ]
              },
              "default" : [
                "MessageCreate",
                "ParticipantsLeave",
                "ParticipantsJoin"
              ],
              "example" : [
                "MessageCreate",
                "ParticipantsLeave"
              ]
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/DmEventFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/DmEventExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_events" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Get recent DM Events",
        "description" : "Returns recent DM Events across DM conversations",
        "operationId" : "getDmEvents",
        "parameters" : [
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "name" : "event_types",
            "in" : "query",
            "description" : "The set of event_types to include in the results.",
            "required" : false,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "MessageCreate",
                  "ParticipantsJoin",
                  "ParticipantsLeave"
                ]
              },
              "default" : [
                "MessageCreate",
                "ParticipantsLeave",
                "ParticipantsJoin"
              ],
              "example" : [
                "MessageCreate",
                "ParticipantsLeave"
              ]
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/DmEventFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/DmEventExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/dm_events/{event_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "dm.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Delete Dm",
        "description" : "Delete a Dm Event that you own.",
        "operationId" : "dmEventDelete",
        "parameters" : [
          {
            "name" : "event_id",
            "in" : "path",
            "description" : "The ID of the direct-message event to delete.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/DmEventId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteDmResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Direct Messages"
        ],
        "summary" : "Get DM Events by id",
        "description" : "Returns DM Events by event id.",
        "operationId" : "getDmEventsById",
        "parameters" : [
          {
            "name" : "event_id",
            "in" : "path",
            "description" : "dm event id.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/DmEventId"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/DmEventFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/DmEventExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmEventsEventIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/insights/28hr" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Get Last 28hr Metrics for Posts",
        "description" : "Get 28hr Metrics for Posts.",
        "operationId" : "TwentyEightHoursEngagementApi",
        "parameters" : [
          {
            "name" : "tweet_ids",
            "in" : "query",
            "description" : "List of PostIds for 28hr metrics.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 25,
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/components/schemas/TweetId"
              },
              "example" : [
                "20"
              ]
            },
            "style" : "form"
          },
          {
            "name" : "granularity",
            "in" : "query",
            "description" : "granularity of metrics response.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "enum" : [
                "Daily",
                "Hourly",
                "Weekly",
                "Total"
              ],
              "example" : "Total"
            },
            "style" : "form"
          },
          {
            "name" : "requested_metrics",
            "in" : "query",
            "description" : "request metrics for historical request.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "AppInstallAttempts",
                  "AppOpens",
                  "DetailExpands",
                  "EmailTweet",
                  "Engagements",
                  "Follows",
                  "HashtagClicks",
                  "Impressions",
                  "Likes",
                  "LinkClicks",
                  "MediaEngagements",
                  "MediaViews",
                  "PermalinkClicks",
                  "ProfileVisits",
                  "QuoteTweets",
                  "Replies",
                  "Retweets",
                  "UniqueVideoViews",
                  "UrlClicks",
                  "UserProfileClicks",
                  "VideoCompletions",
                  "VideoPlayed25Percent",
                  "VideoPlayed50Percent",
                  "VideoPlayed75Percent",
                  "VideoStarts",
                  "VideoViews"
                ]
              }
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/EngagementFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2Insights28hrResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/insights/historical" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Get Historical Metrics for Posts",
        "description" : "Get Historical Metrics for Posts.",
        "operationId" : "HistoricalEngagementApi",
        "parameters" : [
          {
            "name" : "tweet_ids",
            "in" : "query",
            "description" : "List of PostIds for historical metrics.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 25,
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/components/schemas/TweetId"
              },
              "example" : [
                "20"
              ]
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the end of the time range.",
            "required" : true,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the start of the time range.",
            "required" : true,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "granularity",
            "in" : "query",
            "description" : "granularity of metrics response.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "enum" : [
                "Daily",
                "Hourly",
                "Weekly",
                "Total"
              ],
              "example" : "Total"
            },
            "style" : "form"
          },
          {
            "name" : "requested_metrics",
            "in" : "query",
            "description" : "request metrics for historical request.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "AppInstallAttempts",
                  "AppOpens",
                  "DetailExpands",
                  "EmailTweet",
                  "Engagements",
                  "Follows",
                  "HashtagClicks",
                  "Impressions",
                  "Likes",
                  "LinkClicks",
                  "MediaEngagements",
                  "MediaViews",
                  "PermalinkClicks",
                  "ProfileVisits",
                  "QuoteTweets",
                  "Replies",
                  "Retweets",
                  "UniqueVideoViews",
                  "UrlClicks",
                  "UserProfileClicks",
                  "VideoCompletions",
                  "VideoPlayed25Percent",
                  "VideoPlayed50Percent",
                  "VideoPlayed75Percent",
                  "VideoStarts",
                  "VideoViews"
                ]
              }
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/EngagementFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2InsightsHistoricalResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/likes/compliance/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "Likes Compliance stream",
        "description" : "Streams 100% of compliance data for Users",
        "operationId" : "getLikesComplianceStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Likes Compliance events will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Likes Compliance events will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LikesComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/likes/firehose/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Likes"
        ],
        "summary" : "Likes Firehose stream",
        "description" : "Streams 100% of public Likes.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-likes-firehose-stream"
        },
        "operationId" : "likesFirehoseStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 20,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Likes will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/LikeWithTweetAuthorFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/LikeWithTweetAuthorExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLikeResponseV2"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/likes/sample10/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Likes"
        ],
        "summary" : "Likes Sample 10 stream",
        "description" : "Streams 10% of public Likes.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/likes/firehose/api-reference/get-likes-sample10-stream"
        },
        "operationId" : "likesSample10Stream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 2,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Likes will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/LikeWithTweetAuthorFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/LikeWithTweetAuthorExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLikeResponseV2"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/lists" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.read",
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Create List",
        "description" : "Creates a new List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists"
        },
        "operationId" : "listIdCreate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/lists/{id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Delete List",
        "description" : "Delete a List that you own.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id"
        },
        "operationId" : "listIdDelete",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List to delete.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "List lookup by List ID.",
        "description" : "Returns a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-lists-id"
        },
        "operationId" : "listIdGet",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/ListFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/ListExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "put" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Update List.",
        "description" : "Update a List that you own.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/put-lists-id"
        },
        "operationId" : "listIdUpdate",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List to modify.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUpdateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/lists/{id}/followers" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns User objects that follow a List by the provided List ID",
        "description" : "Returns a list of Users that follow a List by the provided List ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers"
        },
        "operationId" : "listGetFollowers",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationTokenLong"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdFollowersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/lists/{id}/members" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns User objects that are members of a List by the provided List ID.",
        "description" : "Returns a list of Users that are members of a List by the provided List ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships"
        },
        "operationId" : "listGetMembers",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationTokenLong"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdMembersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Add a List member",
        "description" : "Causes a User to become a member of a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/post-lists-id-members"
        },
        "operationId" : "listAddMember",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List for which to add a member.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListAddUserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMutateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/lists/{id}/members/{user_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Remove a List member",
        "description" : "Causes a User to be removed from the members of a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/delete-lists-id-members-user_id"
        },
        "operationId" : "listRemoveMember",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List to remove a member.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          },
          {
            "name" : "user_id",
            "in" : "path",
            "description" : "The ID of User that will be removed from the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMutateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/lists/{id}/tweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "List Posts timeline by List ID.",
        "description" : "Returns a list of Posts associated with the provided List ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets"
        },
        "operationId" : "listsIdTweets",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Media"
        ],
        "summary" : "Media lookup by Media Key",
        "description" : "Returns a variety of information about the Media specified by the requested Media Key.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "findMediaByMediaKeys",
        "parameters" : [
          {
            "name" : "media_keys",
            "in" : "query",
            "description" : "A comma separated list of Media Keys. Up to 100 are allowed in a single request.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "$ref" : "#/components/schemas/MediaKey"
              }
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2MediaResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/analytics" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Media"
        ],
        "summary" : "Analytics of Media",
        "description" : "Returns analytics of Media.",
        "operationId" : "MediaAnalytics",
        "parameters" : [
          {
            "name" : "media_keys",
            "in" : "query",
            "description" : "A comma separated list of Media Keys. Up to 100 are allowed in a single request.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "$ref" : "#/components/schemas/MediaKey"
              }
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the end of the time range.",
            "required" : true,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the start of the time range.",
            "required" : true,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "granularity",
            "in" : "query",
            "description" : "The granularity for the search counts results.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "enum" : [
                "hourly",
                "daily",
                "total"
              ],
              "default" : "daily"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/MediaAnalyticsFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaAnalytics"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/metadata" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Metadata Create",
        "description" : "MetadataCreate",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-metadata-create#metadata-create"
        },
        "operationId" : "metadataCreate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MetadataCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetadataCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/subtitles" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Subtitle Delete",
        "description" : "SubtitleDelete",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-subtitles-delete"
        },
        "operationId" : "deleteSubtitles",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubtitlesDeleteRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubtitlesDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Subtitle Create",
        "description" : "SubtitleCreate",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-subtitles-create"
        },
        "operationId" : "createSubtitles",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SubtitlesCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubtitlesCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/upload" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Media Upload Status",
        "description" : "Get MediaUpload Status",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload-status#media-upload-status"
        },
        "operationId" : "uploadMediaStatus",
        "parameters" : [
          {
            "name" : "media_id",
            "in" : "query",
            "description" : "Media id for the requested media upload status.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/MediaId"
            },
            "style" : "form"
          },
          {
            "name" : "command",
            "in" : "query",
            "description" : "The command for the media upload request.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "STATUS"
              ]
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Image or subtitle media upload",
        "description" : "Uploads an image or a subtitle using a single API call.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "uploadMedia",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadRequestOneShot"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadRequestOneShot"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/upload/initialize" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Initialize a media upload request.",
        "description" : "Initialize a media upload request.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "initializeMediaUpload",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadConfigRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/upload/{id}/append" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Media upload resumable upload append endpoint.",
        "description" : "MediaUpload",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "appendMediaUpload",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The media identifier for the media to perform the append operation.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/MediaId"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadAppendRequest"
              }
            },
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/MediaUploadAppendRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadAppendResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/upload/{id}/finalize" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "media.write"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "MediaUpload"
        ],
        "summary" : "Finalize a media upload request.",
        "description" : "Finalize a media upload request.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/media/media-upload"
        },
        "operationId" : "finalizeMediaUpload",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The media id of the targeted media to finalize.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/MediaId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MediaUploadResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/media/{media_key}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Media"
        ],
        "summary" : "Media lookup by Media Key",
        "description" : "Returns a variety of information about the Media specified by the requested Media Key.",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "findMediaByMediaKey",
        "parameters" : [
          {
            "name" : "media_key",
            "in" : "path",
            "description" : "A single Media Key.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/MediaKey"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2MediaMediaKeyResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/openapi.json" : {
      "get" : {
        "tags" : [
          "General"
        ],
        "summary" : "Returns the OpenAPI Specification document.",
        "description" : "Full OpenAPI Specification in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)",
        "operationId" : "getOpenApiSpec",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/2/spaces" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "space.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Spaces"
        ],
        "summary" : "Space lookup up Space IDs",
        "description" : "Returns a variety of information about the Spaces specified by the requested IDs",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces"
        },
        "operationId" : "findSpacesByIds",
        "parameters" : [
          {
            "name" : "ids",
            "in" : "query",
            "description" : "The list of Space IDs to return.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "type" : "string",
                "description" : "The unique identifier of this Space.",
                "pattern" : "^[a-zA-Z0-9]{1,13}$",
                "example" : "1SLjjRYNejbKM"
              }
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/SpaceFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/SpaceExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TopicFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/spaces/by/creator_ids" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "space.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Spaces"
        ],
        "summary" : "Space lookup by their creators",
        "description" : "Returns a variety of information about the Spaces created by the provided User IDs",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids"
        },
        "operationId" : "findSpacesByCreatorIds",
        "parameters" : [
          {
            "name" : "user_ids",
            "in" : "query",
            "description" : "The IDs of Users to search through.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "$ref" : "#/components/schemas/UserId"
              }
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/SpaceFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/SpaceExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TopicFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesByCreatorIdsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/spaces/search" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "space.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Spaces"
        ],
        "summary" : "Search for Spaces",
        "description" : "Returns Spaces that match the provided query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search"
        },
        "operationId" : "searchSpaces",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "The search query.",
            "required" : true,
            "example" : "crypto",
            "schema" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 2048,
              "example" : "crypto"
            },
            "style" : "form"
          },
          {
            "name" : "state",
            "in" : "query",
            "description" : "The state of Spaces to search for.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "live",
                "scheduled",
                "all"
              ],
              "default" : "all"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The number of results to return.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/SpaceFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/SpaceExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TopicFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/spaces/{id}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "space.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Spaces"
        ],
        "summary" : "Space lookup by Space ID",
        "description" : "Returns a variety of information about the Space specified by the requested ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id"
        },
        "operationId" : "findSpaceById",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the Space to be retrieved.",
            "required" : true,
            "example" : "1YqKDqWqdPLsV",
            "schema" : {
              "type" : "string",
              "description" : "The unique identifier of this Space.",
              "pattern" : "^[a-zA-Z0-9]{1,13}$",
              "example" : "1SLjjRYNejbKM"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/SpaceFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/SpaceExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TopicFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/spaces/{id}/buyers" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "space.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Spaces",
          "Tweets"
        ],
        "summary" : "Retrieve the list of Users who purchased a ticket to the given space",
        "description" : "Retrieves the list of Users who purchased a ticket to the given space",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers"
        },
        "operationId" : "spaceBuyers",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the Space to be retrieved.",
            "required" : true,
            "example" : "1YqKDqWqdPLsV",
            "schema" : {
              "type" : "string",
              "description" : "The unique identifier of this Space.",
              "pattern" : "^[a-zA-Z0-9]{1,13}$",
              "example" : "1SLjjRYNejbKM"
            },
            "style" : "simple"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdBuyersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/spaces/{id}/tweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "space.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Spaces",
          "Tweets"
        ],
        "summary" : "Retrieve Posts from a Space.",
        "description" : "Retrieves Posts shared in the specified Space.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets"
        },
        "operationId" : "spaceTweets",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the Space to be retrieved.",
            "required" : true,
            "example" : "1YqKDqWqdPLsV",
            "schema" : {
              "type" : "string",
              "description" : "The unique identifier of this Space.",
              "pattern" : "^[a-zA-Z0-9]{1,13}$",
              "example" : "1SLjjRYNejbKM"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The number of Posts to fetch from the provided space. If not provided, the value will default to the maximum of 100.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100,
              "example" : 25
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/trends/by/woeid/{woeid}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Trends"
        ],
        "summary" : "Trends",
        "description" : "Returns the Trend associated with the supplied WoeId.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/trends/api-reference/get-trends-by-woeid"
        },
        "operationId" : "getTrends",
        "parameters" : [
          {
            "name" : "woeid",
            "in" : "path",
            "description" : "The WOEID of the place to lookup a trend for.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            },
            "style" : "simple"
          },
          {
            "name" : "max_trends",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 50,
              "format" : "int32",
              "default" : 20
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TrendFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TrendsByWoeidWoeidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Post lookup by Post IDs",
        "description" : "Returns a variety of information about the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets"
        },
        "operationId" : "findTweetsById",
        "parameters" : [
          {
            "name" : "ids",
            "in" : "query",
            "description" : "A comma separated list of Post IDs. Up to 100 are allowed in a single request.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "tweet.write",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Creation of a Post",
        "description" : "Causes the User to create a Post under the authorized account.",
        "externalDocs" : {
          "url" : "https://developer.x.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets"
        },
        "operationId" : "createTweet",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TweetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/analytics" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Analytics of posts",
        "description" : "Returns analytics of posts.",
        "operationId" : "postAnalytics2",
        "parameters" : [
          {
            "name" : "ids",
            "in" : "query",
            "description" : "A comma separated list of Post IDs. Up to 100 are allowed in a single request.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the end of the time range.",
            "required" : true,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The UTC timestamp representing the start of the time range.",
            "required" : true,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "granularity",
            "in" : "query",
            "description" : "The granularity for the search counts results.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "enum" : [
                "hourly",
                "daily",
                "weekly",
                "total"
              ],
              "default" : "total"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/AnalyticsFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Analytics"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/compliance/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "Posts Compliance stream",
        "description" : "Streams 100% of compliance data for Posts",
        "operationId" : "getTweetsComplianceStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 4,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Post Compliance events will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Post Compliance events will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/counts/all" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Full archive search counts",
        "description" : "Returns Post Counts that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all"
        },
        "operationId" : "tweetCountsFullArchiveSearch",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 4096,
              "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "Returns results with a Post ID less than (that is, older than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "next_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "granularity",
            "in" : "query",
            "description" : "The granularity for the search counts results.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "minute",
                "hour",
                "day"
              ],
              "default" : "hour"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/SearchCountFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsCountsAllResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/counts/recent" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Recent search counts",
        "description" : "Returns Post Counts from the last 7 days that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-recent"
        },
        "operationId" : "tweetCountsRecentSearch",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 4096,
              "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "Returns results with a Post ID less than (that is, older than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "next_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "granularity",
            "in" : "query",
            "description" : "The granularity for the search counts results.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "minute",
                "hour",
                "day"
              ],
              "default" : "hour"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/SearchCountFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsCountsRecentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/firehose/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Firehose stream",
        "description" : "Streams 100% of public Posts.",
        "operationId" : "getTweetsFirehoseStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 20,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/firehose/stream/lang/en" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "English Language Firehose stream",
        "description" : "Streams 100% of English Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangEn",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 8,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/firehose/stream/lang/ja" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Japanese Language Firehose stream",
        "description" : "Streams 100% of Japanese Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangJa",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 2,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/firehose/stream/lang/ko" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Korean Language Firehose stream",
        "description" : "Streams 100% of Korean Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangKo",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 2,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/firehose/stream/lang/pt" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Portuguese Language Firehose stream",
        "description" : "Streams 100% of Portuguese Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangPt",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 2,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/label/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "Posts Label stream",
        "description" : "Streams 100% of labeling events applied to Posts",
        "operationId" : "getTweetsLabelStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Post labels will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Post labels will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetLabelStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/sample/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Sample stream",
        "description" : "Streams a deterministic 1% of public Posts.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/volume-streams/api-reference/get-tweets-sample-stream"
        },
        "operationId" : "sampleStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/sample10/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Sample 10% stream",
        "description" : "Streams a deterministic 10% of public Posts.",
        "operationId" : "getTweetsSample10Stream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 2,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSample10StreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/search/all" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Full-archive search",
        "description" : "Returns Posts that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all"
        },
        "operationId" : "tweetsFullarchiveSearch",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 4096,
              "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "Returns results with a Post ID less than (that is, older than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of search results to be returned by a request.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 10,
              "maximum" : 500,
              "format" : "int32",
              "default" : 10
            },
            "style" : "form"
          },
          {
            "name" : "next_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "sort_order",
            "in" : "query",
            "description" : "This order in which to return results.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "recency",
                "relevancy"
              ]
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchAllResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/search/recent" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Recent search",
        "description" : "Returns Posts from the last 7 days that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent"
        },
        "operationId" : "tweetsRecentSearch",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length.",
            "required" : true,
            "schema" : {
              "type" : "string",
              "minLength" : 1,
              "maxLength" : 4096,
              "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
            "required" : false,
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "Returns results with a Post ID less than (that is, older than) the specified ID.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of search results to be returned by a request.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 10,
              "maximum" : 100,
              "format" : "int32",
              "default" : 10
            },
            "style" : "form"
          },
          {
            "name" : "next_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "sort_order",
            "in" : "query",
            "description" : "This order in which to return results.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "enum" : [
                "recency",
                "relevancy"
              ]
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchRecentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/search/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Filtered stream",
        "description" : "Streams Posts matching the stream's active rule set.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream"
        },
        "operationId" : "searchStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilteredStreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/tweets/search/stream/rules" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Rules lookup",
        "description" : "Returns rules from a User's active rule set. Users can fetch all of their rules or a subset, specified by the provided rule ids.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules"
        },
        "operationId" : "getRules",
        "parameters" : [
          {
            "name" : "ids",
            "in" : "query",
            "description" : "A comma-separated list of Rule IDs.",
            "required" : false,
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/RuleId"
              }
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 1000,
              "format" : "int32",
              "default" : 1000
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This value is populated by passing the 'next_token' returned in a request to paginate through results.",
            "required" : false,
            "schema" : {
              "type" : "string",
              "minLength" : 16,
              "maxLength" : 16
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RulesLookupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Add/Delete rules",
        "description" : "Add or delete rules from a User's active rule set. Users can provide unique, optionally tagged rules to add. Users can delete their entire rule set or a subset specified by rule ids or values.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/post-tweets-search-stream-rules"
        },
        "operationId" : "addOrDeleteRules",
        "parameters" : [
          {
            "name" : "dry_run",
            "in" : "query",
            "description" : "Dry Run can be used with both the add and delete action, with the expected result given, but without actually taking any action in the system (meaning the end state will always be as it was when the request was submitted). This is particularly useful to validate rule changes.",
            "required" : false,
            "schema" : {
              "type" : "boolean"
            },
            "style" : "form"
          },
          {
            "name" : "delete_all",
            "in" : "query",
            "description" : "Delete All can be used to delete all of the rules associated this client app, it should be specified with no other parameters. Once deleted, rules cannot be recovered.",
            "required" : false,
            "schema" : {
              "type" : "boolean"
            },
            "style" : "form"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddOrDeleteRulesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddOrDeleteRulesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/search/stream/rules/counts" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "General"
        ],
        "summary" : "Rules Count",
        "description" : "Returns the counts of rules from a User's active rule set, to reflect usage by project and application.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules-counts"
        },
        "operationId" : "getRuleCount",
        "parameters" : [
          {
            "$ref" : "#/components/parameters/RulesCountFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchStreamRulesCountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/{id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "tweet.write",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Post delete by Post ID",
        "description" : "Delete specified Post (in the path) by ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/delete-tweets-id"
        },
        "operationId" : "deleteTweetById",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the Post to be deleted.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Post lookup by Post ID",
        "description" : "Returns a variety of information about the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id"
        },
        "operationId" : "findTweetById",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "A single Post ID.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/{id}/liking_users" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "like.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns User objects that have liked the provided Post ID",
        "description" : "Returns a list of Users that have liked the provided Post ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-tweets-id-liking_users"
        },
        "operationId" : "tweetsIdLikingUsers",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "A single Post ID.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdLikingUsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/{id}/quote_tweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Retrieve Posts that quote a Post.",
        "description" : "Returns a variety of information about each Post that quotes the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/quote-tweets/api-reference/get-tweets-id-quote_tweets"
        },
        "operationId" : "findTweetsThatQuoteATweet",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "A single Post ID.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results to be returned.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 10,
              "maximum" : 100,
              "format" : "int32",
              "default" : 10
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "exclude",
            "in" : "query",
            "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets').",
            "required" : false,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "replies",
                  "retweets"
                ]
              },
              "example" : [
                "replies",
                "retweets"
              ]
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdQuoteTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/{id}/retweeted_by" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns User objects that have retweeted the provided Post ID",
        "description" : "Returns a list of Users that have retweeted the provided Post ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/get-tweets-id-retweeted_by"
        },
        "operationId" : "tweetsIdRetweetingUsers",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "A single Post ID.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdRetweetedByResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/{id}/retweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Retrieve Posts that repost a Post.",
        "description" : "Returns a variety of information about each Post that has retweeted the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/get-tweets-id-retweets"
        },
        "operationId" : "findTweetsThatRetweetATweet",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "A single Post ID.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdRetweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/tweets/{tweet_id}/hidden" : {
      "put" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.moderate.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Hide replies",
        "description" : "Hides or unhides a reply to an owned conversation.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/hide-replies/api-reference/put-tweets-id-hidden"
        },
        "operationId" : "hideReplyById",
        "parameters" : [
          {
            "name" : "tweet_id",
            "in" : "path",
            "description" : "The ID of the reply that you want to hide or unhide.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TweetHideRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetHideResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/usage/tweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Usage"
        ],
        "summary" : "Post Usage",
        "description" : "Returns the Post Usage.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/usage/tweets/api-reference/get-usage-tweets"
        },
        "operationId" : "getUsageTweets",
        "parameters" : [
          {
            "name" : "days",
            "in" : "query",
            "description" : "The number of days for which you need usage for.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 90,
              "format" : "int32",
              "default" : 7
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UsageFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsageTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "User lookup by IDs",
        "description" : "This endpoint returns information about Users. Specify Users by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users"
        },
        "operationId" : "findUsersById",
        "parameters" : [
          {
            "name" : "ids",
            "in" : "query",
            "description" : "A list of User IDs, comma-separated. You can specify up to 100 IDs.",
            "required" : true,
            "example" : "2244994945,6253282,12",
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "$ref" : "#/components/schemas/UserId"
              }
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/by" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "User lookup by usernames",
        "description" : "This endpoint returns information about Users. Specify Users by their username.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by"
        },
        "operationId" : "findUsersByUsername",
        "parameters" : [
          {
            "name" : "usernames",
            "in" : "query",
            "description" : "A list of usernames, comma-separated.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "maxItems" : 100,
              "items" : {
                "type" : "string",
                "description" : "The X handle (screen name) of this User.",
                "pattern" : "^[A-Za-z0-9_]{1,15}$"
              },
              "example" : "TwitterDev,TwitterAPI"
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersByResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/by/username/{username}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "User lookup by username",
        "description" : "This endpoint returns information about a User. Specify User by username.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username"
        },
        "operationId" : "findUserByUsername",
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "description" : "A username.",
            "required" : true,
            "example" : "TwitterDev",
            "schema" : {
              "type" : "string",
              "pattern" : "^[A-Za-z0-9_]{1,15}$"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersByUsernameUsernameResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/compliance/stream" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Compliance"
        ],
        "summary" : "Users Compliance stream",
        "description" : "Streams 100% of compliance data for Users",
        "operationId" : "getUsersComplianceStream",
        "parameters" : [
          {
            "name" : "backfill_minutes",
            "in" : "query",
            "description" : "The number of minutes of backfill requested.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 0,
              "maximum" : 5,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "partition",
            "in" : "query",
            "description" : "The partition number.",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 4,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the User Compliance events will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the User Compliance events will be provided.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "x-twitter-streaming" : true
      }
    },
    "/2/users/me" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "User lookup me",
        "description" : "This endpoint returns information about the requesting User.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me"
        },
        "operationId" : "findMyUser",
        "parameters" : [
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersMeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/personalized_trends" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Trends"
        ],
        "summary" : "Get personalized Trends",
        "description" : "Returns Personalized trends for the authenticated user",
        "externalDocs" : {
          "url" : "https://developer.x.com/"
        },
        "operationId" : "personalizedTrends",
        "parameters" : [
          {
            "$ref" : "#/components/parameters/PersonalizedTrendFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersPersonalizedTrendsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/reposts_of_me" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "timeline.read",
              "tweet.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns repost of user",
        "description" : "This endpoint returns reposts of the requesting User.",
        "operationId" : "listOfRepostOfUser",
        "parameters" : [
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersRepostsOfMeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/search" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "User search",
        "description" : "Returns Users that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-search"
        },
        "operationId" : "searchUserByQuery",
        "parameters" : [
          {
            "name" : "query",
            "in" : "query",
            "description" : "TThe the query string by which to query for users.",
            "required" : true,
            "example" : "someXUser",
            "schema" : {
              "$ref" : "#/components/schemas/UserSearchQueryVnext"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 1000,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "next_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "User lookup by ID",
        "description" : "This endpoint returns information about a User. Specify User by ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id"
        },
        "operationId" : "findUserById",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/blocking" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "block.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns User objects that are blocked by provided User ID",
        "description" : "Returns a list of Users that are blocked by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking"
        },
        "operationId" : "usersIdBlocking",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 1000,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdBlockingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/bookmarks" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "bookmark.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Bookmarks"
        ],
        "summary" : "Bookmarks by User",
        "description" : "Returns Post objects that have been bookmarked by the requesting User",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks"
        },
        "operationId" : "getUsersIdBookmarks",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdBookmarksResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "bookmark.write",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Bookmarks"
        ],
        "summary" : "Add Post to Bookmarks",
        "description" : "Adds a Post (ID in the body) to the requesting User's (in the path) bookmarks",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks"
        },
        "operationId" : "postUsersIdBookmarks",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to add bookmarks.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookmarkAddRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/bookmarks/folders" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "bookmark.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Bookmarks"
        ],
        "summary" : "Bookmark folders by User",
        "description" : "Returns metadata about Bookmark folders that have been created by the requesting User",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "getUsersIdBookmarkFolders",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkFoldersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/bookmarks/folders/{folder_id}" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "bookmark.read",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Bookmarks"
        ],
        "summary" : "Bookmark Folder Posts by User and Folder id",
        "description" : "Returns posts belonging to input bookmarks folder id that have been created by the requesting User",
        "externalDocs" : {
          "url" : "https://developer.x.com"
        },
        "operationId" : "getUsersIdBookmarkFolderPosts",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "folder_id",
            "in" : "path",
            "description" : "The ID of the Bookmark Folder that the authenticated User is trying to fetch Posts for.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/BookmarkFolderId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkFolderPostsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/bookmarks/{tweet_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "bookmark.write",
              "tweet.read",
              "users.read"
            ]
          }
        ],
        "tags" : [
          "Bookmarks"
        ],
        "summary" : "Remove a bookmarked Post",
        "description" : "Removes a Post from the requesting User's bookmarked Posts.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id"
        },
        "operationId" : "usersIdBookmarksDelete",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User whose bookmark is to be removed.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "tweet_id",
            "in" : "path",
            "description" : "The ID of the Post that the source User is removing from bookmarks.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/dm/block" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Causes DMs to/from the target User (in the path) to be blocked by the authenticated request user",
        "description" : "Causes DMs to/from the target User (in the path) to be blocked by the authenticated request user",
        "externalDocs" : {
          "url" : "https://developer.x.com/"
        },
        "operationId" : "usersIdDMBlock",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the target User that the authenticated user requesting to block dms for.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDMBlockCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/dm/unblock" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "dm.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Causes DMs to/from the target User (in the path) to be unblocked by the authenticated request user",
        "description" : "Causes DMs to/from the target User (in the path) to be unblocked by the authenticated request user",
        "externalDocs" : {
          "url" : "https://developer.x.com/"
        },
        "operationId" : "usersIdDMUnBlock",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the target User that the authenticated user requesting to unblock dms for.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersDMUnBlockCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/followed_lists" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Get User's Followed Lists",
        "description" : "Returns a User's followed Lists.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-users-id-followed_lists"
        },
        "operationId" : "userFollowedLists",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationTokenLong"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/ListFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/ListExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Follow a List",
        "description" : "Causes a User to follow a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/post-users-id-followed-lists"
        },
        "operationId" : "listUserFollow",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that will follow the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListFollowedRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListFollowedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/followed_lists/{list_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Unfollow a List",
        "description" : "Causes a User to unfollow a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/delete-users-id-followed-lists-list_id"
        },
        "operationId" : "listUserUnfollow",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that will unfollow the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "list_id",
            "in" : "path",
            "description" : "The ID of the List to unfollow.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListFollowedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/followers" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "follows.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Followers by User ID",
        "description" : "Returns a list of Users who are followers of the specified User ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers"
        },
        "operationId" : "usersIdFollowers",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 1000,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/following" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "follows.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Following by User ID",
        "description" : "Returns a list of Users that are being followed by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-following"
        },
        "operationId" : "usersIdFollowing",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 1000,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken32"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "follows.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Follow User",
        "description" : "Causes the User(in the path) to follow, or “request to follow” for protected Users, the target User. The User(in the path) must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/post-users-source_user_id-following"
        },
        "operationId" : "usersIdFollow",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to follow the target User.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersFollowingCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersFollowingCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/liked_tweets" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "like.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Returns Post objects liked by the provided User ID",
        "description" : "Returns a list of Posts liked by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-users-id-liked_tweets"
        },
        "operationId" : "usersIdLikedTweets",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 5,
              "maximum" : 100,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdLikedTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/likes" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "like.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Causes the User (in the path) to like the specified Post",
        "description" : "Causes the User (in the path) to like the specified Post. The User in the path must match the User context authorizing the request.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/post-users-id-likes"
        },
        "operationId" : "usersIdLike",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to like the Post.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersLikesCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersLikesCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/likes/{tweet_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "like.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Causes the User (in the path) to unlike the specified Post",
        "description" : "Causes the User (in the path) to unlike the specified Post. The User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/delete-users-id-likes-tweet_id"
        },
        "operationId" : "usersIdUnlike",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to unlike the Post.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "tweet_id",
            "in" : "path",
            "description" : "The ID of the Post that the User is requesting to unlike.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersLikesDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/list_memberships" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Get a User's List Memberships",
        "description" : "Get a User's List Memberships.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships"
        },
        "operationId" : "getUserListMemberships",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationTokenLong"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/ListFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/ListExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdListMembershipsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/mentions" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "User mention timeline by User ID",
        "description" : "Returns Post objects that mention username associated to the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions"
        },
        "operationId" : "usersIdMentions",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified.",
            "required" : false,
            "example" : "1346889436626259968",
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 5,
              "maximum" : 100,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdMentionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/muting" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "mute.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Returns User objects that are muted by the provided User ID",
        "description" : "Returns a list of Users that are muted by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/get-users-muting"
        },
        "operationId" : "usersIdMuting",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 1000,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationTokenLong"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdMutingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "mute.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Mute User by User ID.",
        "description" : "Causes the User (in the path) to mute the target User. The User (in the path) must match the User context authorizing the request.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/post-users-user_id-muting"
        },
        "operationId" : "usersIdMute",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to mute the target User.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MuteUserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MuteUserMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/owned_lists" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Get a User's Owned Lists.",
        "description" : "Get a User's Owned Lists.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-users-id-owned_lists"
        },
        "operationId" : "listUserOwnedLists",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32",
              "default" : 100
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get a specified 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationTokenLong"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/ListFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/ListExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdOwnedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/pinned_lists" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.read",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Get a User's Pinned Lists",
        "description" : "Get a User's Pinned Lists.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/get-users-id-pinned_lists"
        },
        "operationId" : "listUserPinnedLists",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "$ref" : "#/components/parameters/ListFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/ListExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdPinnedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Pin a List",
        "description" : "Causes a User to pin a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/post-users-id-pinned-lists"
        },
        "operationId" : "listUserPin",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that will pin the List.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListPinnedRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPinnedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/pinned_lists/{list_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "list.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Lists"
        ],
        "summary" : "Unpin a List",
        "description" : "Causes a User to remove a pinned List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/delete-users-id-pinned-lists-list_id"
        },
        "operationId" : "listUserUnpin",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User for whom to return results.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "list_id",
            "in" : "path",
            "description" : "The ID of the List to unpin.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/ListId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUnpinResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/retweets" : {
      "post" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "tweet.write",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Causes the User (in the path) to repost the specified Post.",
        "description" : "Causes the User (in the path) to repost the specified Post. The User in the path must match the User context authorizing the request.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/post-users-id-retweets"
        },
        "operationId" : "usersIdRetweets",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to repost the Post.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          }
        ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersRetweetsCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersRetweetsCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/retweets/{source_tweet_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "tweet.write",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "Causes the User (in the path) to unretweet the specified Post",
        "description" : "Causes the User (in the path) to unretweet the specified Post. The User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/delete-users-id-retweets-tweet_id"
        },
        "operationId" : "usersIdUnretweets",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to repost the Post.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "source_tweet_id",
            "in" : "path",
            "description" : "The ID of the Post that the User is requesting to unretweet.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersRetweetsDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/timelines/reverse_chronological" : {
      "get" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "User home timeline by User ID",
        "description" : "Returns Post objects that appears in the provided User ID's home timeline",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-reverse-chronological"
        },
        "operationId" : "usersIdTimeline",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the authenticated source User to list Reverse Chronological Timeline Posts of.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified.",
            "required" : false,
            "example" : "791775337160081409",
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified.",
            "required" : false,
            "example" : "1346889436626259968",
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 1,
              "maximum" : 100,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "exclude",
            "in" : "query",
            "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets').",
            "required" : false,
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "replies",
                  "retweets"
                ]
              },
              "example" : [
                "replies",
                "retweets"
              ]
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdTimelinesReverseChronologicalResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{id}/tweets" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "OAuth2UserToken" : [
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Tweets"
        ],
        "summary" : "User Posts timeline by User ID",
        "description" : "Returns a list of Posts authored by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets"
        },
        "operationId" : "usersIdTweets",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "description" : "The ID of the User to lookup.",
            "required" : true,
            "example" : "2244994945",
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          },
          {
            "name" : "since_id",
            "in" : "query",
            "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified.",
            "required" : false,
            "example" : "791775337160081409",
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "until_id",
            "in" : "query",
            "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified.",
            "required" : false,
            "example" : "1346889436626259968",
            "schema" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "style" : "form"
          },
          {
            "name" : "max_results",
            "in" : "query",
            "description" : "The maximum number of results.",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "minimum" : 5,
              "maximum" : 100,
              "format" : "int32"
            },
            "style" : "form"
          },
          {
            "name" : "pagination_token",
            "in" : "query",
            "description" : "This parameter is used to get the next 'page' of results.",
            "required" : false,
            "schema" : {
              "$ref" : "#/components/schemas/PaginationToken36"
            },
            "style" : "form"
          },
          {
            "name" : "exclude",
            "in" : "query",
            "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets').",
            "required" : false,
            "schema" : {
              "type" : "array",
              "minItems" : 1,
              "uniqueItems" : true,
              "items" : {
                "type" : "string",
                "enum" : [
                  "replies",
                  "retweets"
                ]
              },
              "example" : [
                "replies",
                "retweets"
              ]
            },
            "explode" : false,
            "style" : "form"
          },
          {
            "name" : "start_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified.",
            "required" : false,
            "example" : "2021-02-01T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "name" : "end_time",
            "in" : "query",
            "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified.",
            "required" : false,
            "example" : "2021-02-14T18:40:40.000Z",
            "schema" : {
              "type" : "string",
              "format" : "date-time"
            },
            "style" : "form"
          },
          {
            "$ref" : "#/components/parameters/TweetFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/TweetExpansionsParameter"
          },
          {
            "$ref" : "#/components/parameters/MediaFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PollFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/UserFieldsParameter"
          },
          {
            "$ref" : "#/components/parameters/PlaceFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{source_user_id}/following/{target_user_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "follows.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Unfollow User",
        "description" : "Causes the source User to unfollow the target User. The source User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/delete-users-source_id-following"
        },
        "operationId" : "usersIdUnfollow",
        "parameters" : [
          {
            "name" : "source_user_id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to unfollow the target User.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "target_user_id",
            "in" : "path",
            "description" : "The ID of the User that the source User is requesting to unfollow.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersFollowingDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/users/{source_user_id}/muting/{target_user_id}" : {
      "delete" : {
        "security" : [
          {
            "OAuth2UserToken" : [
              "mute.write",
              "tweet.read",
              "users.read"
            ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Users"
        ],
        "summary" : "Unmute User by User ID",
        "description" : "Causes the source User to unmute the target User. The source User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/delete-users-user_id-muting"
        },
        "operationId" : "usersIdUnmute",
        "parameters" : [
          {
            "name" : "source_user_id",
            "in" : "path",
            "description" : "The ID of the authenticated source User that is requesting to unmute the target User.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
            },
            "style" : "simple"
          },
          {
            "name" : "target_user_id",
            "in" : "path",
            "description" : "The ID of the User that the source User is requesting to unmute.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MuteUserMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/webhooks" : {
      "get" : {
        "security" : [
          {
            "BearerToken" : [ ]
          }
        ],
        "tags" : [
          "Webhooks"
        ],
        "summary" : "Get a list of webhook configs associated with a client app",
        "description" : "Get a list of webhook configs associated with a client app.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "getWebhooksConfig",
        "parameters" : [
          {
            "$ref" : "#/components/parameters/WebhookConfigFieldsParameter"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2WebhooksResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "post" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Webhooks"
        ],
        "summary" : "Create Webhook Config",
        "description" : "Creates a new webhook config.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "createWebhooksConfig",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebhookConfigCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookConfigCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    },
    "/2/webhooks/{webhook_id}" : {
      "delete" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Webhooks"
        ],
        "summary" : "Delete Webhook Config",
        "description" : "Deletes a webhook config.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "deleteWebhooksConfig",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The ID of the webhook to delete.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookConfigDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      },
      "put" : {
        "security" : [
          {
            "BearerToken" : [ ]
          },
          {
            "UserToken" : [ ]
          }
        ],
        "tags" : [
          "Webhooks"
        ],
        "summary" : "Webhook CRC Check",
        "description" : "Manually trigger a CRC check for a webhook.",
        "externalDocs" : {
          "url" : "https://docs.x.com/x-api/webhooks/introduction"
        },
        "operationId" : "putWebhooksConfig",
        "parameters" : [
          {
            "name" : "webhook_id",
            "in" : "path",
            "description" : "The ID of the webhook to check.",
            "required" : true,
            "schema" : {
              "$ref" : "#/components/schemas/WebhookConfigId"
            },
            "style" : "simple"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebhookConfigPutResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers" : [
    {
      "description" : "Twitter API",
      "url" : "https://api.twitter.com"
    }
  ],
  "tags" : [
    {
      "name" : "Bookmarks",
      "description" : "Endpoints related to retrieving, managing bookmarks of a user",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/bookmarks"
      }
    },
    {
      "name" : "Compliance",
      "description" : "Endpoints related to keeping X data in your systems compliant",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction"
      }
    },
    {
      "name" : "Direct Messages",
      "description" : "Endpoints related to retrieving, managing Direct Messages",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/direct-messages"
      }
    },
    {
      "name" : "General",
      "description" : "Miscellaneous endpoints for general API functionality",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api"
      }
    },
    {
      "name" : "Lists",
      "description" : "Endpoints related to retrieving, managing Lists",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/lists"
      }
    },
    {
      "name" : "Media",
      "description" : "Endpoints related to Media",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.x.com"
      }
    },
    {
      "name" : "MediaUpload",
      "description" : "Endpoints related to uploading Media",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.x.com"
      }
    },
    {
      "name" : "Spaces",
      "description" : "Endpoints related to retrieving, managing Spaces",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces"
      }
    },
    {
      "name" : "Tweets",
      "description" : "Endpoints related to retrieving, searching, and modifying Tweets",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup"
      }
    },
    {
      "name" : "Users",
      "description" : "Endpoints related to retrieving, managing relationships of Users",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup"
      }
    }
  ],
  "components" : {
    "securitySchemes" : {
      "BearerToken" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "OAuth2UserToken" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://api.twitter.com/2/oauth2/authorize",
            "tokenUrl" : "https://api.twitter.com/2/oauth2/token",
            "scopes" : {
              "block.read" : "Accounts you’ve blocked.",
              "bookmark.read" : "Allows an app to read bookmarked Tweets",
              "bookmark.write" : "Allows an app to create and delete bookmarks",
              "dm.read" : "All your Direct Messages",
              "dm.write" : "Send and manage Direct Messages for you",
              "follows.read" : "People who follow you and people who you follow.",
              "follows.write" : "Follow and unfollow people for you.",
              "like.read" : "Tweets you’ve liked and likes you can view.",
              "like.write" : "Like and un-like Tweets for you.",
              "list.read" : "Lists, list members, and list followers of lists you’ve created or are a member of, including private lists.",
              "list.write" : "Create and manage Lists for you.",
              "media.write" : "Upload media like photos and videos for you.",
              "mute.read" : "Accounts you’ve muted.",
              "mute.write" : "Mute and unmute accounts for you.",
              "offline.access" : "App can request refresh token.",
              "space.read" : "Access all of the Spaces you can see.",
              "timeline.read" : "All the Custom Timelines you can see, including public Custom Timelines from other developers.",
              "tweet.moderate.write" : "Hide and unhide replies to your Tweets.",
              "tweet.read" : "All the Tweets you can see, including Tweets from protected accounts.",
              "tweet.write" : "Tweet and retweet for you.",
              "users.read" : "Any account you can see, including protected accounts. Any account you can see, including protected accounts."
            }
          }
        }
      },
      "UserToken" : {
        "type" : "http",
        "scheme" : "OAuth"
      }
    },
    "schemas" : {
      "AddOrDeleteRulesRequest" : {
        "oneOf" : [
          {
            "$ref" : "#/components/schemas/AddRulesRequest"
          },
          {
            "$ref" : "#/components/schemas/DeleteRulesRequest"
          }
        ]
      },
      "AddOrDeleteRulesResponse" : {
        "type" : "object",
        "description" : "A response from modifying user-specified stream filtering rules.",
        "required" : [
          "meta"
        ],
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "All user-specified stream filtering rules that were created.",
            "items" : {
              "$ref" : "#/components/schemas/Rule"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/RulesResponseMetadata"
          }
        }
      },
      "AddRulesRequest" : {
        "type" : "object",
        "description" : "A request to add a user-specified stream filtering rule.",
        "required" : [
          "add"
        ],
        "properties" : {
          "add" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleNoId"
            }
          }
        }
      },
      "Aggregate" : {
        "type" : "integer",
        "description" : "The sum of results returned in this response.",
        "format" : "int32"
      },
      "AllProjectClientApps" : {
        "type" : "array",
        "description" : "Client App Rule Counts for all applications in the project",
        "items" : {
          "$ref" : "#/components/schemas/AppRulesCount"
        }
      },
      "AllowDownloadStatus" : {
        "type" : "object",
        "properties" : {
          "allow_download" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "AltText" : {
        "type" : "object",
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "Description of media ( <= 1000 characters )",
            "maxLength" : 1000,
            "example" : "A dancing cat"
          }
        }
      },
      "Analytics" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              },
              "timestamped_metrics" : {
                "type" : "array",
                "title" : "Timestamped Metrics",
                "description" : "Array containing metrics data along with the timestamps of their recording.",
                "items" : {
                  "$ref" : "#/components/schemas/TimestampedMetrics"
                }
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AnimatedGif" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Media"
          },
          {
            "type" : "object",
            "properties" : {
              "preview_image_url" : {
                "type" : "string",
                "format" : "uri"
              },
              "variants" : {
                "$ref" : "#/components/schemas/Variants"
              }
            }
          }
        ]
      },
      "AppRulesCount" : {
        "type" : "object",
        "description" : "A count of user-provided stream filtering rules at the client application level.",
        "properties" : {
          "client_app_id" : {
            "$ref" : "#/components/schemas/ClientAppId"
          },
          "rule_count" : {
            "type" : "integer",
            "description" : "Number of rules for client application",
            "format" : "int32"
          }
        }
      },
      "AudiencePolicy" : {
        "type" : "object",
        "properties" : {
          "creator_subscriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [
                "Any"
              ]
            }
          },
          "x_subscriptions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [
                "Any"
              ]
            }
          }
        }
      },
      "BookmarkAddRequest" : {
        "type" : "object",
        "required" : [
          "tweet_id"
        ],
        "properties" : {
          "tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "BookmarkFolderId" : {
        "type" : "string",
        "description" : "The unique identifier of this Bookmark folder.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "BookmarkFolderPostsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            }
          }
        }
      },
      "BookmarkFoldersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/BookmarkFolderId"
              },
              "name" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "BookmarkMutationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "bookmarked" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CashtagEntity" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
          },
          {
            "$ref" : "#/components/schemas/CashtagFields"
          }
        ]
      },
      "CashtagFields" : {
        "type" : "object",
        "description" : "Represent the portion of text recognized as a Cashtag, and its start and end position within the text.",
        "required" : [
          "tag"
        ],
        "properties" : {
          "tag" : {
            "type" : "string",
            "example" : "TWTR"
          }
        }
      },
      "ClientAppId" : {
        "type" : "string",
        "description" : "The ID of the client application",
        "minLength" : 1,
        "maxLength" : 19
      },
      "ClientAppUsage" : {
        "type" : "object",
        "description" : "Usage per client app",
        "properties" : {
          "client_app_id" : {
            "type" : "string",
            "description" : "The unique identifier for this project",
            "format" : "^[0-9]{1,19}$"
          },
          "usage" : {
            "type" : "array",
            "description" : "The usage value",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/UsageFields"
            }
          },
          "usage_result_count" : {
            "type" : "integer",
            "description" : "The number of results returned",
            "format" : "int32"
          }
        }
      },
      "ClientDisconnectedProblem" : {
        "description" : "Your client has gone away.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "ClientForbiddenProblem" : {
        "description" : "A problem that indicates your client is forbidden from making this request.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "properties" : {
              "reason" : {
                "type" : "string",
                "enum" : [
                  "official-client-forbidden",
                  "client-not-enrolled"
                ]
              },
              "registration_url" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        ]
      },
      "Community" : {
        "type" : "object",
        "description" : "A X Community is a curated group of Posts.",
        "required" : [
          "id",
          "name"
        ],
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "$ref" : "#/components/schemas/CommunityId"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this Community."
          }
        }
      },
      "CommunityId" : {
        "type" : "string",
        "description" : "The unique identifier of this Community.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "ComplianceJob" : {
        "type" : "object",
        "required" : [
          "id",
          "type",
          "created_at",
          "upload_url",
          "download_url",
          "upload_expires_at",
          "download_expires_at",
          "status"
        ],
        "properties" : {
          "created_at" : {
            "$ref" : "#/components/schemas/CreatedAt"
          },
          "download_expires_at" : {
            "$ref" : "#/components/schemas/DownloadExpiration"
          },
          "download_url" : {
            "$ref" : "#/components/schemas/DownloadUrl"
          },
          "id" : {
            "$ref" : "#/components/schemas/JobId"
          },
          "name" : {
            "$ref" : "#/components/schemas/ComplianceJobName"
          },
          "status" : {
            "$ref" : "#/components/schemas/ComplianceJobStatus"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComplianceJobType"
          },
          "upload_expires_at" : {
            "$ref" : "#/components/schemas/UploadExpiration"
          },
          "upload_url" : {
            "$ref" : "#/components/schemas/UploadUrl"
          }
        }
      },
      "ComplianceJobName" : {
        "type" : "string",
        "description" : "User-provided name for a compliance job.",
        "maxLength" : 64,
        "example" : "my-job"
      },
      "ComplianceJobStatus" : {
        "type" : "string",
        "description" : "Status of a compliance job.",
        "enum" : [
          "created",
          "in_progress",
          "failed",
          "complete",
          "expired"
        ]
      },
      "ComplianceJobType" : {
        "type" : "string",
        "description" : "Type of compliance job to list.",
        "enum" : [
          "tweets",
          "users"
        ]
      },
      "ConflictProblem" : {
        "description" : "You cannot create a new job if one is already in progress.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "ConnectionExceptionProblem" : {
        "description" : "A problem that indicates something is wrong with the connection.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "properties" : {
              "connection_issue" : {
                "type" : "string",
                "enum" : [
                  "TooManyConnections",
                  "ProvisioningSubscription",
                  "RuleConfigurationIssue",
                  "RulesInvalidIssue"
                ]
              }
            }
          }
        ]
      },
      "ContentExpiration" : {
        "type" : "object",
        "properties" : {
          "timestamp_sec" : {
            "type" : "number",
            "description" : "Expiration time for content as a Unix timestamp in seconds",
            "format" : "long",
            "example" : 1740787200
          }
        }
      },
      "ContextAnnotation" : {
        "type" : "object",
        "description" : "Annotation inferred from the Tweet text.",
        "required" : [
          "domain",
          "entity"
        ],
        "properties" : {
          "domain" : {
            "$ref" : "#/components/schemas/ContextAnnotationDomainFields"
          },
          "entity" : {
            "$ref" : "#/components/schemas/ContextAnnotationEntityFields"
          }
        }
      },
      "ContextAnnotationDomainFields" : {
        "type" : "object",
        "description" : "Represents the data for the context annotation domain.",
        "required" : [
          "id"
        ],
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the context annotation domain."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique id for a context annotation domain.",
            "pattern" : "^[0-9]{1,19}$"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the context annotation domain."
          }
        }
      },
      "ContextAnnotationEntityFields" : {
        "type" : "object",
        "description" : "Represents the data for the context annotation entity.",
        "required" : [
          "id"
        ],
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the context annotation entity."
          },
          "id" : {
            "type" : "string",
            "description" : "The unique id for a context annotation entity.",
            "pattern" : "^[0-9]{1,19}$"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the context annotation entity."
          }
        }
      },
      "CountryCode" : {
        "type" : "string",
        "description" : "A two-letter ISO 3166-1 alpha-2 country code.",
        "pattern" : "^[A-Z]{2}$",
        "example" : "US"
      },
      "CreateAttachmentsMessageRequest" : {
        "type" : "object",
        "required" : [
          "attachments"
        ],
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmAttachments"
          },
          "text" : {
            "type" : "string",
            "description" : "Text of the message.",
            "minLength" : 1
          }
        }
      },
      "CreateComplianceJobRequest" : {
        "type" : "object",
        "description" : "A request to create a new batch compliance job.",
        "required" : [
          "type"
        ],
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/ComplianceJobName"
          },
          "resumable" : {
            "type" : "boolean",
            "description" : "If true, this endpoint will return a pre-signed URL with resumable uploads enabled."
          },
          "type" : {
            "type" : "string",
            "description" : "Type of compliance job to list.",
            "enum" : [
              "tweets",
              "users"
            ]
          }
        }
      },
      "CreateComplianceJobResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ComplianceJob"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CreateDmConversationRequest" : {
        "type" : "object",
        "required" : [
          "conversation_type",
          "participant_ids",
          "message"
        ],
        "properties" : {
          "conversation_type" : {
            "type" : "string",
            "description" : "The conversation type that is being created.",
            "enum" : [
              "Group"
            ]
          },
          "message" : {
            "$ref" : "#/components/schemas/CreateMessageRequest"
          },
          "participant_ids" : {
            "$ref" : "#/components/schemas/DmParticipants"
          }
        },
        "additionalProperties" : false
      },
      "CreateDmEventResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "required" : [
              "dm_conversation_id",
              "dm_event_id"
            ],
            "properties" : {
              "dm_conversation_id" : {
                "$ref" : "#/components/schemas/DmConversationId"
              },
              "dm_event_id" : {
                "$ref" : "#/components/schemas/DmEventId"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CreateMessageRequest" : {
        "anyOf" : [
          {
            "$ref" : "#/components/schemas/CreateTextMessageRequest"
          },
          {
            "$ref" : "#/components/schemas/CreateAttachmentsMessageRequest"
          }
        ]
      },
      "CreateTextMessageRequest" : {
        "type" : "object",
        "required" : [
          "text"
        ],
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmAttachments"
          },
          "text" : {
            "type" : "string",
            "description" : "Text of the message.",
            "minLength" : 1
          }
        }
      },
      "CreatedAt" : {
        "type" : "string",
        "description" : "Creation time of the compliance job.",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40.000Z"
      },
      "DeleteDmResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "deleted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DeleteRulesRequest" : {
        "type" : "object",
        "description" : "A response from deleting user-specified stream filtering rules.",
        "required" : [
          "delete"
        ],
        "properties" : {
          "delete" : {
            "type" : "object",
            "description" : "IDs and values of all deleted user-specified stream filtering rules.",
            "properties" : {
              "ids" : {
                "type" : "array",
                "description" : "IDs of all deleted user-specified stream filtering rules.",
                "items" : {
                  "$ref" : "#/components/schemas/RuleId"
                }
              },
              "values" : {
                "type" : "array",
                "description" : "Values of all deleted user-specified stream filtering rules.",
                "items" : {
                  "$ref" : "#/components/schemas/RuleValue"
                }
              }
            }
          }
        }
      },
      "DisallowedResourceProblem" : {
        "description" : "A problem that indicates that the resource requested violates the precepts of this API.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "required" : [
              "resource_id",
              "resource_type",
              "section"
            ],
            "properties" : {
              "resource_id" : {
                "type" : "string"
              },
              "resource_type" : {
                "type" : "string",
                "enum" : [
                  "user",
                  "tweet",
                  "media",
                  "list",
                  "space"
                ]
              },
              "section" : {
                "type" : "string",
                "enum" : [
                  "data",
                  "includes"
                ]
              }
            }
          }
        ]
      },
      "DisplayTextRange" : {
        "type" : "array",
        "description" : "Represent a boundary range (start and end zero-based indices) for the portion of text that is displayed for a post. `start` must be smaller than `end`. The start index is inclusive, the end index is exclusive.",
        "minItems" : 2,
        "maxItems" : 2,
        "items" : {
          "type" : "integer",
          "minimum" : 0
        }
      },
      "DmAttachments" : {
        "type" : "array",
        "description" : "Attachments to a DM Event.",
        "items" : {
          "$ref" : "#/components/schemas/DmMediaAttachment"
        }
      },
      "DmConversationId" : {
        "type" : "string",
        "description" : "Unique identifier of a DM conversation. This can either be a numeric string, or a pair of numeric strings separated by a '-' character in the case of one-on-one DM Conversations.",
        "pattern" : "^([0-9]{1,19}-[0-9]{1,19}|[0-9]{15,19})$",
        "example" : "123123123-456456456"
      },
      "DmEvent" : {
        "type" : "object",
        "required" : [
          "id",
          "event_type"
        ],
        "properties" : {
          "attachments" : {
            "type" : "object",
            "description" : "Specifies the type of attachments (if any) present in this DM.",
            "properties" : {
              "card_ids" : {
                "type" : "array",
                "description" : "A list of card IDs (if cards are attached).",
                "minItems" : 1,
                "items" : {
                  "type" : "string"
                }
              },
              "media_keys" : {
                "type" : "array",
                "description" : "A list of Media Keys for each one of the media attachments (if media are attached).",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/MediaKey"
                }
              }
            }
          },
          "cashtags" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dm_conversation_id" : {
            "$ref" : "#/components/schemas/DmConversationId"
          },
          "event_type" : {
            "type" : "string",
            "example" : "MessageCreate"
          },
          "hashtags" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/DmEventId"
          },
          "mentions" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          },
          "participant_ids" : {
            "type" : "array",
            "description" : "A list of participants for a ParticipantsJoin or ParticipantsLeave event_type.",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "referenced_tweets" : {
            "type" : "array",
            "description" : "A list of Posts this DM refers to.",
            "minItems" : 1,
            "items" : {
              "type" : "object",
              "required" : [
                "id"
              ],
              "properties" : {
                "id" : {
                  "$ref" : "#/components/schemas/TweetId"
                }
              }
            }
          },
          "sender_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "text" : {
            "type" : "string"
          },
          "urls" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/UrlEntityDm"
            }
          }
        }
      },
      "DmEventId" : {
        "type" : "string",
        "description" : "Unique identifier of a DM Event.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "DmMediaAttachment" : {
        "type" : "object",
        "required" : [
          "media_id"
        ],
        "properties" : {
          "media_id" : {
            "$ref" : "#/components/schemas/MediaId"
          }
        }
      },
      "DmParticipants" : {
        "type" : "array",
        "description" : "Participants for the DM Conversation.",
        "minItems" : 2,
        "maxItems" : 49,
        "items" : {
          "$ref" : "#/components/schemas/UserId"
        }
      },
      "DomainRestrictions" : {
        "type" : "object",
        "properties" : {
          "whitelist" : {
            "type" : "array",
            "description" : "List of whitelisted domains",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "DownloadExpiration" : {
        "type" : "string",
        "description" : "Expiration time of the download URL.",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40.000Z"
      },
      "DownloadUrl" : {
        "type" : "string",
        "description" : "URL from which the user will retrieve their compliance results.",
        "format" : "uri"
      },
      "DuplicateRuleProblem" : {
        "description" : "The rule you have submitted is a duplicate.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "value" : {
                "type" : "string"
              }
            }
          }
        ]
      },
      "End" : {
        "type" : "string",
        "description" : "The end time of the bucket.",
        "format" : "date-time"
      },
      "Engagement" : {
        "type" : "object",
        "description" : "An Engagement Api Response.",
        "properties" : {
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "string"
                },
                "tweets" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "measurement" : {
            "type" : "object",
            "properties" : {
              "metrics_time_series" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "tweet_id" : {
                      "$ref" : "#/components/schemas/TweetId"
                    },
                    "value" : {
                      "type" : "object",
                      "properties" : {
                        "metric_values" : {
                          "type" : "array",
                          "items" : {
                            "type" : "object",
                            "properties" : {
                              "metric_type" : {
                                "type" : "string"
                              },
                              "metric_value" : {
                                "type" : "number"
                              }
                            }
                          }
                        },
                        "timestamp" : {
                          "type" : "object",
                          "properties" : {
                            "iso8601_time" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "metrics_total" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "tweet_id" : {
                      "$ref" : "#/components/schemas/TweetId"
                    },
                    "value" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "object",
                        "properties" : {
                          "metric_type" : {
                            "type" : "string"
                          },
                          "metric_value" : {
                            "type" : "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EntityIndicesInclusiveExclusive" : {
        "type" : "object",
        "description" : "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is exclusive.",
        "required" : [
          "start",
          "end"
        ],
        "properties" : {
          "end" : {
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity ends.  The index is exclusive.",
            "minimum" : 0,
            "example" : 61
          },
          "start" : {
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity starts.  The index is inclusive.",
            "minimum" : 0,
            "example" : 50
          }
        }
      },
      "EntityIndicesInclusiveInclusive" : {
        "type" : "object",
        "description" : "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is inclusive.",
        "required" : [
          "start",
          "end"
        ],
        "properties" : {
          "end" : {
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity ends.  The index is inclusive.",
            "minimum" : 0,
            "example" : 61
          },
          "start" : {
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity starts.  The index is inclusive.",
            "minimum" : 0,
            "example" : 50
          }
        }
      },
      "Error" : {
        "type" : "object",
        "required" : [
          "code",
          "message"
        ],
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "Expansions" : {
        "type" : "object",
        "properties" : {
          "media" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          },
          "places" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Place"
            }
          },
          "polls" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Poll"
            }
          },
          "topics" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Topic"
            }
          },
          "tweets" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "users" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "FieldUnauthorizedProblem" : {
        "description" : "A problem that indicates that you are not allowed to see a particular field on a Tweet, User, etc.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "required" : [
              "resource_type",
              "field",
              "section"
            ],
            "properties" : {
              "field" : {
                "type" : "string"
              },
              "resource_type" : {
                "type" : "string",
                "enum" : [
                  "user",
                  "tweet",
                  "media",
                  "list",
                  "space"
                ]
              },
              "section" : {
                "type" : "string",
                "enum" : [
                  "data",
                  "includes"
                ]
              }
            }
          }
        ]
      },
      "FilteredStreamingTweetResponse" : {
        "type" : "object",
        "description" : "A Tweet or error that can be returned by the streaming Tweet API. The values returned with a successful streamed Tweet includes the user provided rules that the Tweet matched.",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "matching_rules" : {
            "type" : "array",
            "description" : "The list of rules which matched the Tweet",
            "items" : {
              "type" : "object",
              "required" : [
                "id"
              ],
              "properties" : {
                "id" : {
                  "$ref" : "#/components/schemas/RuleId"
                },
                "tag" : {
                  "$ref" : "#/components/schemas/RuleTag"
                }
              }
            }
          }
        }
      },
      "FoundMediaOrigin" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique Identifier of media within provider ( <= 24 characters ))",
            "example" : "u5BzatR15TZ04"
          },
          "provider" : {
            "type" : "string",
            "description" : "The media provider (e.g., 'giphy') that sourced the media ( <= 8 Characters )",
            "example" : "giphy"
          }
        }
      },
      "FullTextEntities" : {
        "type" : "object",
        "properties" : {
          "annotations" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "description" : "Annotation for entities based on the Tweet text.",
              "allOf" : [
                {
                  "$ref" : "#/components/schemas/EntityIndicesInclusiveInclusive"
                },
                {
                  "type" : "object",
                  "description" : "Represents the data for the annotation.",
                  "properties" : {
                    "normalized_text" : {
                      "type" : "string",
                      "description" : "Text used to determine annotation.",
                      "example" : "Barack Obama"
                    },
                    "probability" : {
                      "type" : "number",
                      "description" : "Confidence factor for annotation type.",
                      "minimum" : 0,
                      "maximum" : 1,
                      "format" : "double"
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Annotation type.",
                      "example" : "Person"
                    }
                  }
                }
              ]
            }
          },
          "cashtags" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "hashtags" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "mentions" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          },
          "urls" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          }
        }
      },
      "GenericProblem" : {
        "description" : "A generic problem with no additional information beyond that provided by the HTTP status code.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "Geo" : {
        "type" : "object",
        "required" : [
          "type",
          "bbox",
          "properties"
        ],
        "properties" : {
          "bbox" : {
            "type" : "array",
            "minItems" : 4,
            "maxItems" : 4,
            "items" : {
              "type" : "number",
              "minimum" : -180,
              "maximum" : 180,
              "format" : "double"
            },
            "example" : [
              -105.193475,
              39.60973,
              -105.053164,
              39.761974
            ]
          },
          "geometry" : {
            "$ref" : "#/components/schemas/Point"
          },
          "properties" : {
            "type" : "object"
          },
          "type" : {
            "type" : "string",
            "enum" : [
              "Feature"
            ]
          }
        }
      },
      "GeoRestrictions" : {
        "oneOf" : [
          {
            "type" : "object",
            "required" : [
              "whitelisted_country_codes",
              "blacklisted_country_codes"
            ],
            "properties" : {
              "blacklisted_country_codes" : {
                "type" : "array",
                "description" : "List of blacklisted country codes",
                "minItems" : 0,
                "maxItems" : 0,
                "items" : {
                  "type" : "string",
                  "description" : "Country code in ISO 3166-1 alpha-2 format",
                  "pattern" : "^[a-zA-Z]{2}$",
                  "example" : "us"
                }
              },
              "whitelisted_country_codes" : {
                "type" : "array",
                "description" : "List of whitelisted country codes",
                "minItems" : 1,
                "items" : {
                  "type" : "string",
                  "description" : "Country code in ISO 3166-1 alpha-2 format",
                  "pattern" : "^[a-zA-Z]{2}$",
                  "example" : "us"
                }
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "whitelisted_country_codes",
              "blacklisted_country_codes"
            ],
            "properties" : {
              "blacklisted_country_codes" : {
                "type" : "array",
                "description" : "List of blacklisted country codes",
                "minItems" : 1,
                "items" : {
                  "type" : "string",
                  "description" : "Country code in ISO 3166-1 alpha-2 format",
                  "pattern" : "^[a-zA-Z]{2}$",
                  "example" : "us"
                }
              },
              "whitelisted_country_codes" : {
                "type" : "array",
                "description" : "List of whitelisted country codes",
                "minItems" : 0,
                "maxItems" : 0,
                "items" : {
                  "type" : "string",
                  "description" : "Country code in ISO 3166-1 alpha-2 format",
                  "pattern" : "^[a-zA-Z]{2}$",
                  "example" : "us"
                }
              }
            }
          }
        ]
      },
      "Get2CommunitiesIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Community"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2CommunitiesSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Community"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              }
            }
          }
        }
      },
      "Get2ComplianceJobsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ComplianceJob"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2ComplianceJobsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/ComplianceJob"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2DmConversationsIdDmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2DmConversationsWithParticipantIdDmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2DmEventsEventIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DmEvent"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2DmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2FdxAccountsAccountidContactResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaidAccountContact"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2FdxAccountsAccountidPayment-networksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/PlaidAccountPaymentNetwork"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2FdxAccountsAccountidResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaidAccount"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2FdxAccountsAccountidTransactionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/PlaidAccountTransaction"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2FdxCustomersCurrentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PlaidCustomer"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2Insights28hrResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Engagement"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2InsightsHistoricalResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Engagement"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2LikesFirehoseStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeWithTweetAuthor"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2LikesSample10StreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeWithTweetAuthor"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2ListsIdFollowersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2ListsIdMembersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2ListsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/List"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2ListsIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2MediaAnalyticsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MediaAnalytics"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2MediaMediaKeyResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Media"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2MediaResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2NotesSearchNotesWrittenResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Note"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2NotesSearchPostsEligibleForNotesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2SpacesByCreatorIdsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2SpacesIdBuyersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2SpacesIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Space"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2SpacesIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2SpacesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2SpacesSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TrendsByWoeidWoeidResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Trend"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsAnalyticsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Analytics"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsCountsAllResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/SearchCount"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "total_tweet_count" : {
                "$ref" : "#/components/schemas/Aggregate"
              }
            }
          }
        }
      },
      "Get2TweetsCountsRecentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/SearchCount"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "total_tweet_count" : {
                "$ref" : "#/components/schemas/Aggregate"
              }
            }
          }
        }
      },
      "Get2TweetsFirehoseStreamLangEnResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsFirehoseStreamLangJaResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsFirehoseStreamLangKoResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsFirehoseStreamLangPtResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsFirehoseStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsIdLikingUsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TweetsIdQuoteTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TweetsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsIdRetweetedByResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TweetsIdRetweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsSample10StreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsSampleStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsSearchAllResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TweetsSearchRecentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2TweetsSearchStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2TweetsSearchStreamRulesCountsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RulesCount"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsageTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Usage"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersByResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2UsersByUsernameUsernameResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2UsersIdBlockingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdBookmarksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdFollowedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdFollowersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdFollowingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdLikedTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdListMembershipsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdMentionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdMutingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdOwnedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdPinnedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2UsersIdTimelinesReverseChronologicalResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "newest_id" : {
                "$ref" : "#/components/schemas/NewestId"
              },
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "oldest_id" : {
                "$ref" : "#/components/schemas/OldestId"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersMeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2UsersPersonalizedTrendsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/PersonalizedTrend"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersRepostsOfMeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              },
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "Get2UsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "Get2UsersSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "next_token" : {
                "$ref" : "#/components/schemas/NextToken"
              },
              "previous_token" : {
                "$ref" : "#/components/schemas/PreviousToken"
              }
            }
          }
        }
      },
      "Get2WebhooksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/WebhookConfig"
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "meta" : {
            "type" : "object",
            "properties" : {
              "result_count" : {
                "$ref" : "#/components/schemas/ResultCount"
              }
            }
          }
        }
      },
      "HashtagEntity" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
          },
          {
            "$ref" : "#/components/schemas/HashtagFields"
          }
        ]
      },
      "HashtagFields" : {
        "type" : "object",
        "description" : "Represent the portion of text recognized as a Hashtag, and its start and end position within the text.",
        "required" : [
          "tag"
        ],
        "properties" : {
          "tag" : {
            "type" : "string",
            "description" : "The text of the Hashtag.",
            "example" : "MondayMotivation"
          }
        }
      },
      "HttpStatusCode" : {
        "type" : "integer",
        "description" : "HTTP Status Code.",
        "minimum" : 100,
        "maximum" : 599
      },
      "InvalidRequestProblem" : {
        "description" : "A problem that indicates this request is invalid.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "properties" : {
              "errors" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    },
                    "parameters" : {
                      "type" : "object",
                      "additionalProperties" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "InvalidRuleProblem" : {
        "description" : "The rule you have submitted is invalid.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "JobId" : {
        "type" : "string",
        "description" : "Compliance Job ID.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1372966999991541762"
      },
      "KillAllConnectionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "killed_connections" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "LikeComplianceSchema" : {
        "type" : "object",
        "required" : [
          "delete"
        ],
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/UnlikeComplianceSchema"
          }
        }
      },
      "LikeId" : {
        "type" : "string",
        "description" : "The unique identifier of this Like.",
        "pattern" : "^[A-Za-z0-9_]{1,40}$",
        "example" : "8ba4f34e6235d905a46bac021d98e923"
      },
      "LikeWithTweetAuthor" : {
        "type" : "object",
        "description" : "A Like event, with the tweet author user and the tweet being liked",
        "properties" : {
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Tweet.",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40.000Z"
          },
          "id" : {
            "$ref" : "#/components/schemas/LikeId"
          },
          "liked_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "timestamp_ms" : {
            "type" : "integer",
            "description" : "Timestamp in milliseconds of creation.",
            "format" : "int32"
          },
          "tweet_author_id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "LikesComplianceStreamResponse" : {
        "description" : "Likes compliance stream events.",
        "oneOf" : [
          {
            "type" : "object",
            "description" : "Compliance event.",
            "required" : [
              "data"
            ],
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/LikeComplianceSchema"
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "errors"
            ],
            "properties" : {
              "errors" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        ]
      },
      "List" : {
        "type" : "object",
        "description" : "A X List is a curated group of accounts.",
        "required" : [
          "id",
          "name"
        ],
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "follower_count" : {
            "type" : "integer"
          },
          "id" : {
            "$ref" : "#/components/schemas/ListId"
          },
          "member_count" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this List."
          },
          "owner_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "private" : {
            "type" : "boolean"
          }
        }
      },
      "ListAddUserRequest" : {
        "type" : "object",
        "required" : [
          "user_id"
        ],
        "properties" : {
          "user_id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "ListCreateRequest" : {
        "type" : "object",
        "required" : [
          "name"
        ],
        "properties" : {
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 100
          },
          "name" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 25
          },
          "private" : {
            "type" : "boolean",
            "default" : false
          }
        }
      },
      "ListCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "description" : "A X List is a curated group of accounts.",
            "required" : [
              "id",
              "name"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/ListId"
              },
              "name" : {
                "type" : "string",
                "description" : "The name of this List."
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "deleted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListFollowedRequest" : {
        "type" : "object",
        "required" : [
          "list_id"
        ],
        "properties" : {
          "list_id" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }
      },
      "ListFollowedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "following" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListId" : {
        "type" : "string",
        "description" : "The unique identifier of this List.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "ListMutateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "is_member" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListPinnedRequest" : {
        "type" : "object",
        "required" : [
          "list_id"
        ],
        "properties" : {
          "list_id" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }
      },
      "ListPinnedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "pinned" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUnpinResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "pinned" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "minLength" : 0,
            "maxLength" : 100
          },
          "name" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 25
          },
          "private" : {
            "type" : "boolean"
          }
        }
      },
      "ListUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "updated" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ManagementInfo" : {
        "type" : "object",
        "properties" : {
          "managed" : {
            "type" : "boolean",
            "description" : "Indicates if the media is managed by Media Studio",
            "example" : false
          }
        }
      },
      "Media" : {
        "type" : "object",
        "required" : [
          "type"
        ],
        "properties" : {
          "height" : {
            "$ref" : "#/components/schemas/MediaHeight"
          },
          "media_key" : {
            "$ref" : "#/components/schemas/MediaKey"
          },
          "type" : {
            "type" : "string"
          },
          "width" : {
            "$ref" : "#/components/schemas/MediaWidth"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "animated_gif" : "#/components/schemas/AnimatedGif",
            "photo" : "#/components/schemas/Photo",
            "video" : "#/components/schemas/Video"
          }
        }
      },
      "MediaAnalytics" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "media_key" : {
                "$ref" : "#/components/schemas/MediaKey"
              },
              "timestamped_metrics" : {
                "type" : "array",
                "title" : "Timestamped Metrics",
                "description" : "Array containing metrics data along with the timestamps of their recording.",
                "items" : {
                  "$ref" : "#/components/schemas/MediaTimestampedMetrics"
                }
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaCategory" : {
        "type" : "string",
        "description" : "A string enum value which identifies a media use-case. This identifier is used to enforce use-case specific constraints (e.g. file size, video duration) and enable advanced features.",
        "enum" : [
          "amplify_video",
          "tweet_gif",
          "tweet_image",
          "tweet_video",
          "dm_gif",
          "dm_image",
          "dm_video",
          "subtitles"
        ],
        "example" : "tweet_video"
      },
      "MediaCategoryOneShot" : {
        "type" : "string",
        "description" : "A string enum value which identifies a media use-case. This identifier is used to enforce use-case specific constraints (e.g. file size) and enable advanced features.",
        "enum" : [
          "tweet_image",
          "dm_image",
          "subtitles"
        ],
        "example" : "tweet_image"
      },
      "MediaCategorySubtitles" : {
        "type" : "string",
        "description" : "The media category of uploaded media to which subtitles should be added/deleted",
        "enum" : [
          "AmplifyVideo",
          "TweetVideo"
        ],
        "example" : "TweetVideo"
      },
      "MediaHeight" : {
        "type" : "integer",
        "description" : "The height of the media in pixels.",
        "minimum" : 0
      },
      "MediaId" : {
        "type" : "string",
        "description" : "The unique identifier of this Media.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "MediaKey" : {
        "type" : "string",
        "description" : "The Media Key identifier for this attachment.",
        "pattern" : "^([0-9]+)_([0-9]+)$"
      },
      "MediaMetrics" : {
        "type" : "object",
        "properties" : {
          "cta_url_clicks" : {
            "type" : "integer",
            "title" : "CTA URL Clicks",
            "description" : "Tracks the number of clicks on a call-to-action URL"
          },
          "cta_watch_clicks" : {
            "type" : "integer",
            "title" : "CTA Watch Clicks",
            "description" : "Tracks the number of clicks to watch a video or media content"
          },
          "play_from_tap" : {
            "type" : "integer",
            "title" : "Play From Tap",
            "description" : "Tracks the number of times a video or media is played from a user tap"
          },
          "playback25" : {
            "type" : "integer",
            "title" : "Playback 25%",
            "description" : "Tracks the number of times a video reaches 25% of its duration"
          },
          "playback50" : {
            "type" : "integer",
            "title" : "Playback 50%",
            "description" : "Tracks the number of times a video reaches 50% of its duration"
          },
          "playback75" : {
            "type" : "integer",
            "title" : "Playback 75%",
            "description" : "Tracks the number of times a video reaches 75% of its duration"
          },
          "playback_complete" : {
            "type" : "integer",
            "title" : "Playback Complete",
            "description" : "Tracks the number of times a video is played to completion"
          },
          "playback_start" : {
            "type" : "integer",
            "title" : "Playback Start",
            "description" : "Tracks the number of times a video playback is initiated"
          },
          "video_views" : {
            "type" : "integer",
            "title" : "Video Views",
            "description" : "Tracks the number of times a video is viewed"
          },
          "watch_time_ms" : {
            "type" : "integer",
            "title" : "Watch Time (ms)",
            "description" : "Tracks the total time spent watching a video, measured in milliseconds"
          }
        }
      },
      "MediaPayloadBinary" : {
        "type" : "string",
        "description" : "The file to upload.",
        "format" : "binary"
      },
      "MediaPayloadByte" : {
        "type" : "string",
        "description" : "The file to upload.",
        "format" : "byte"
      },
      "MediaSegments" : {
        "oneOf" : [
          {
            "type" : "integer",
            "description" : "An integer value representing the media upload segment.",
            "minimum" : 0,
            "maximum" : 999,
            "format" : "int32"
          },
          {
            "type" : "string",
            "description" : "An integer value representing the media upload segment.",
            "pattern" : "^[0-9]{1,3}$",
            "format" : "integer"
          }
        ]
      },
      "MediaTimestampedMetrics" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "$ref" : "#/components/schemas/MediaMetrics"
          },
          "timestamp" : {
            "type" : "string",
            "title" : "Timestamp",
            "description" : "ISO8601 Time",
            "example" : "2025-03-17T06:30:00Z"
          }
        }
      },
      "MediaUploadAppendRequest" : {
        "anyOf" : [
          {
            "type" : "object",
            "required" : [
              "media",
              "segment_index"
            ],
            "properties" : {
              "media" : {
                "$ref" : "#/components/schemas/MediaPayloadBinary"
              },
              "segment_index" : {
                "$ref" : "#/components/schemas/MediaSegments"
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "media",
              "segment_index"
            ],
            "properties" : {
              "media" : {
                "$ref" : "#/components/schemas/MediaPayloadByte"
              },
              "segment_index" : {
                "$ref" : "#/components/schemas/MediaSegments"
              }
            }
          }
        ]
      },
      "MediaUploadAppendResponse" : {
        "type" : "object",
        "description" : "A response from getting a media upload request status.",
        "required" : [
          "meta"
        ],
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "expires_at" : {
                "type" : "integer",
                "description" : "Unix epoch time in seconds after when the upload session expires.",
                "format" : "int64"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaUploadConfigRequest" : {
        "type" : "object",
        "properties" : {
          "additional_owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "media_category" : {
            "$ref" : "#/components/schemas/MediaCategory"
          },
          "media_type" : {
            "type" : "string",
            "description" : "The type of media.",
            "enum" : [
              "video/mp4",
              "video/webm",
              "video/mp2t",
              "video/quicktime",
              "text/srt",
              "text/vtt",
              "image/jpeg",
              "image/gif",
              "image/bmp",
              "image/png",
              "image/webp",
              "image/pjpeg",
              "image/tiff",
              "model/gltf-binary",
              "model/vnd.usdz+zip"
            ],
            "example" : "video/mp4"
          },
          "shared" : {
            "type" : "boolean",
            "description" : "Whether this media is shared or not."
          },
          "total_bytes" : {
            "type" : "integer",
            "description" : "The total size of the media upload in bytes.",
            "minimum" : 0,
            "maximum" : 17179869184
          }
        },
        "additionalProperties" : false
      },
      "MediaUploadRequestOneShot" : {
        "type" : "object",
        "required" : [
          "media",
          "media_category"
        ],
        "properties" : {
          "additional_owners" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "media" : {
            "anyOf" : [
              {
                "$ref" : "#/components/schemas/MediaPayloadBinary"
              },
              {
                "$ref" : "#/components/schemas/MediaPayloadByte"
              }
            ]
          },
          "media_category" : {
            "$ref" : "#/components/schemas/MediaCategoryOneShot"
          },
          "media_type" : {
            "type" : "string",
            "description" : "The type of image or subtitle.",
            "enum" : [
              "text/srt",
              "text/vtt",
              "image/jpeg",
              "image/bmp",
              "image/png",
              "image/webp",
              "image/pjpeg",
              "image/tiff"
            ],
            "example" : "image/png"
          },
          "shared" : {
            "type" : "boolean",
            "description" : "Whether this media is shared or not.",
            "default" : false
          }
        },
        "additionalProperties" : false
      },
      "MediaUploadResponse" : {
        "type" : "object",
        "description" : "A response from getting a media upload request status.",
        "required" : [
          "meta"
        ],
        "properties" : {
          "data" : {
            "type" : "object",
            "required" : [
              "id",
              "media_key"
            ],
            "properties" : {
              "expires_after_secs" : {
                "type" : "integer",
                "description" : "Number of seconds after which upload session expires.",
                "format" : "int32"
              },
              "id" : {
                "$ref" : "#/components/schemas/MediaId"
              },
              "media_key" : {
                "$ref" : "#/components/schemas/MediaKey"
              },
              "processing_info" : {
                "$ref" : "#/components/schemas/ProcessingInfo"
              },
              "size" : {
                "type" : "integer",
                "description" : "Size of the upload",
                "format" : "int32"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaWidth" : {
        "type" : "integer",
        "description" : "The width of the media in pixels.",
        "minimum" : 0
      },
      "MentionEntity" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
          },
          {
            "$ref" : "#/components/schemas/MentionFields"
          }
        ]
      },
      "MentionFields" : {
        "type" : "object",
        "description" : "Represent the portion of text recognized as a User mention, and its start and end position within the text.",
        "required" : [
          "username"
        ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        }
      },
      "MetadataCreateRequest" : {
        "type" : "object",
        "required" : [
          "id"
        ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "allow_download_status" : {
                "$ref" : "#/components/schemas/AllowDownloadStatus"
              },
              "alt_text" : {
                "$ref" : "#/components/schemas/AltText"
              },
              "audience_policy" : {
                "$ref" : "#/components/schemas/AudiencePolicy"
              },
              "content_expiration" : {
                "$ref" : "#/components/schemas/ContentExpiration"
              },
              "domain_restrictions" : {
                "$ref" : "#/components/schemas/DomainRestrictions"
              },
              "found_media_origin" : {
                "$ref" : "#/components/schemas/FoundMediaOrigin"
              },
              "geo_restrictions" : {
                "$ref" : "#/components/schemas/GeoRestrictions"
              },
              "management_info" : {
                "$ref" : "#/components/schemas/ManagementInfo"
              },
              "preview_image" : {
                "$ref" : "#/components/schemas/PreviewImage"
              },
              "sensitive_media_warning" : {
                "$ref" : "#/components/schemas/SensitiveMediaWarning"
              },
              "shared_info" : {
                "$ref" : "#/components/schemas/SharedInfo"
              },
              "sticker_info" : {
                "$ref" : "#/components/schemas/StickerInfo"
              },
              "upload_source" : {
                "$ref" : "#/components/schemas/UploadSource"
              }
            }
          }
        }
      },
      "MetadataCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "associated_metadata" : {
                "type" : "object",
                "properties" : {
                  "allow_download_status" : {
                    "$ref" : "#/components/schemas/AllowDownloadStatus"
                  },
                  "alt_text" : {
                    "$ref" : "#/components/schemas/AltText"
                  },
                  "audience_policy" : {
                    "$ref" : "#/components/schemas/AudiencePolicy"
                  },
                  "content_expiration" : {
                    "$ref" : "#/components/schemas/ContentExpiration"
                  },
                  "domain_restrictions" : {
                    "$ref" : "#/components/schemas/DomainRestrictions"
                  },
                  "found_media_origin" : {
                    "$ref" : "#/components/schemas/FoundMediaOrigin"
                  },
                  "geo_restrictions" : {
                    "$ref" : "#/components/schemas/GeoRestrictions"
                  },
                  "management_info" : {
                    "$ref" : "#/components/schemas/ManagementInfo"
                  },
                  "preview_image" : {
                    "$ref" : "#/components/schemas/PreviewImage"
                  },
                  "sensitive_media_warning" : {
                    "$ref" : "#/components/schemas/SensitiveMediaWarning"
                  },
                  "shared_info" : {
                    "$ref" : "#/components/schemas/SharedInfo"
                  },
                  "sticker_info" : {
                    "$ref" : "#/components/schemas/StickerInfo"
                  },
                  "upload_source" : {
                    "$ref" : "#/components/schemas/UploadSource"
                  }
                }
              },
              "id" : {
                "$ref" : "#/components/schemas/MediaId"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Metrics" : {
        "type" : "object",
        "properties" : {
          "app_install_attempts" : {
            "type" : "integer",
            "title" : "App Install Attempts",
            "description" : "Tracks number of App Install Attempts"
          },
          "app_opens" : {
            "type" : "integer",
            "title" : "App Opens",
            "description" : "Tracks number of App opens"
          },
          "detail_expands" : {
            "type" : "integer",
            "title" : "Detail Expands",
            "description" : "Tracks number of Detail expands"
          },
          "email_tweet" : {
            "type" : "integer",
            "title" : "Email Tweet",
            "description" : "Tracks number of Email Tweet actions"
          },
          "engagements" : {
            "type" : "integer",
            "title" : "Engagements",
            "description" : "Tracks total Engagements"
          },
          "follows" : {
            "type" : "integer",
            "title" : "Follows",
            "description" : "Tracks number of Follows"
          },
          "hashtag_clicks" : {
            "type" : "integer",
            "title" : "Hashtag Clicks",
            "description" : "Tracks number of Hashtag clicks"
          },
          "impressions" : {
            "type" : "integer",
            "title" : "Impressions",
            "description" : "Tracks number of Impressions"
          },
          "likes" : {
            "type" : "integer",
            "title" : "Likes",
            "description" : "Tracks number of Likes"
          },
          "link_clicks" : {
            "type" : "integer",
            "title" : "Link Clicks",
            "description" : "Tracks number of Link clicks"
          },
          "media_engagements" : {
            "type" : "integer",
            "title" : "Media Engagements",
            "description" : "Tracks number of Media engagements"
          },
          "media_views" : {
            "type" : "integer",
            "title" : "Media Views",
            "description" : "Tracks number of Media views"
          },
          "permalink_clicks" : {
            "type" : "integer",
            "title" : "Permalink Clicks",
            "description" : "Tracks number of Permalink clicks"
          },
          "profile_visits" : {
            "type" : "integer",
            "title" : "Profile Visits",
            "description" : "Tracks number of Profile visits"
          },
          "quote_tweets" : {
            "type" : "integer",
            "title" : "Quote Tweets",
            "description" : "Tracks number of Quote Tweets"
          },
          "replies" : {
            "type" : "integer",
            "title" : "Replies",
            "description" : "Tracks number of Replies"
          },
          "retweets" : {
            "type" : "integer",
            "title" : "Retweets",
            "description" : "Tracks number of Retweets"
          },
          "url_clicks" : {
            "type" : "integer",
            "title" : "URL Clicks",
            "description" : "Tracks number of URL clicks"
          },
          "user_profile_clicks" : {
            "type" : "integer",
            "title" : "User Profile Clicks",
            "description" : "Tracks number of User Profile clicks"
          }
        }
      },
      "MisleadingTags" : {
        "type" : "string",
        "description" : "Community Note misleading tags type.",
        "enum" : [
          "disputed_claim_as_fact",
          "factual_error",
          "manipulated_media",
          "misinterpreted_satire",
          "missing_important_context",
          "other",
          "outdated_information"
        ]
      },
      "MuteUserMutationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "muting" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MuteUserRequest" : {
        "type" : "object",
        "required" : [
          "target_user_id"
        ],
        "properties" : {
          "target_user_id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "NewestId" : {
        "type" : "string",
        "description" : "The newest id in this response."
      },
      "NextToken" : {
        "type" : "string",
        "description" : "The next token.",
        "minLength" : 1
      },
      "NonCompliantRulesProblem" : {
        "description" : "A problem that indicates the user's rule set is not compliant.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "Note" : {
        "type" : "object",
        "description" : "A X Community Note is a note on a Post.",
        "required" : [
          "id",
          "post_id",
          "note_info"
        ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/NoteId"
          },
          "info" : {
            "$ref" : "#/components/schemas/NoteInfo"
          },
          "post_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "status" : {
            "$ref" : "#/components/schemas/NoteRatingStatus"
          },
          "test_result" : {
            "type" : "boolean",
            "description" : "Test result information. Only returned when test result is true."
          }
        }
      },
      "NoteClassification" : {
        "type" : "string",
        "description" : "Community Note classification type.",
        "enum" : [
          "misinformed_or_potentially_misleading",
          "not_misleading"
        ]
      },
      "NoteId" : {
        "type" : "string",
        "description" : "The unique identifier of this Community Note.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "NoteInfo" : {
        "type" : "object",
        "description" : "A X Community Note is a note on a Post.",
        "required" : [
          "text",
          "classification",
          "misleading_tags",
          "trustworthy_sources"
        ],
        "properties" : {
          "classification" : {
            "$ref" : "#/components/schemas/NoteClassification"
          },
          "misleading_tags" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MisleadingTags"
            }
          },
          "text" : {
            "type" : "string",
            "description" : "The text summary in the Community Note.",
            "pattern" : "^(?=.*https?://\\S+).+$"
          },
          "trustworthy_sources" : {
            "type" : "boolean",
            "description" : "Whether the note provided trustworthy links."
          }
        },
        "additionalProperties" : false
      },
      "NoteRatingStatus" : {
        "type" : "string",
        "description" : "Community Note rating status. Only returned when test result is false",
        "enum" : [
          "currently_rated_helpful",
          "currently_rated_not_helpful",
          "firm_reject",
          "insufficient_consensus",
          "minimum_ratings_not_met",
          "needs_more_ratings",
          "needs_your_help"
        ]
      },
      "NoteTweetText" : {
        "type" : "string",
        "description" : "The note content of the Tweet.",
        "example" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i"
      },
      "Oauth1PermissionsProblem" : {
        "description" : "A problem that indicates your client application does not have the required OAuth1 permissions for the requested endpoint.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "OldestId" : {
        "type" : "string",
        "description" : "The oldest id in this response."
      },
      "OperationalDisconnectProblem" : {
        "description" : "You have been disconnected for operational reasons.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "properties" : {
              "disconnect_type" : {
                "type" : "string",
                "enum" : [
                  "OperationalDisconnect",
                  "UpstreamOperationalDisconnect",
                  "ForceDisconnect",
                  "UpstreamUncleanDisconnect",
                  "SlowReader",
                  "InternalError",
                  "ClientApplicationStateDegraded",
                  "InvalidRules"
                ]
              }
            }
          }
        ]
      },
      "PaginationToken32" : {
        "type" : "string",
        "description" : "A base32 pagination token.",
        "minLength" : 16
      },
      "PaginationToken36" : {
        "type" : "string",
        "description" : "A base36 pagination token.",
        "minLength" : 1
      },
      "PaginationTokenLong" : {
        "type" : "string",
        "description" : "A 'long' pagination token.",
        "minLength" : 1,
        "maxLength" : 19
      },
      "PersonalizedTrend" : {
        "type" : "object",
        "description" : "A trend.",
        "properties" : {
          "category" : {
            "type" : "string",
            "description" : "Category of this trend."
          },
          "post_count" : {
            "type" : "integer",
            "description" : "Number of posts pertaining to this trend."
          },
          "trend_name" : {
            "type" : "string",
            "description" : "Name of the trend."
          },
          "trending_since" : {
            "type" : "string",
            "description" : "Time since this is trending."
          }
        }
      },
      "Photo" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Media"
          },
          {
            "type" : "object",
            "properties" : {
              "alt_text" : {
                "type" : "string"
              },
              "url" : {
                "type" : "string",
                "format" : "uri"
              }
            }
          }
        ]
      },
      "Place" : {
        "type" : "object",
        "required" : [
          "id",
          "full_name"
        ],
        "properties" : {
          "contained_within" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/PlaceId"
            }
          },
          "country" : {
            "type" : "string",
            "description" : "The full name of the county in which this place exists.",
            "example" : "United States"
          },
          "country_code" : {
            "$ref" : "#/components/schemas/CountryCode"
          },
          "full_name" : {
            "type" : "string",
            "description" : "The full name of this place.",
            "example" : "Lakewood, CO"
          },
          "geo" : {
            "$ref" : "#/components/schemas/Geo"
          },
          "id" : {
            "$ref" : "#/components/schemas/PlaceId"
          },
          "name" : {
            "type" : "string",
            "description" : "The human readable name of this place.",
            "example" : "Lakewood"
          },
          "place_type" : {
            "$ref" : "#/components/schemas/PlaceType"
          }
        }
      },
      "PlaceId" : {
        "type" : "string",
        "description" : "The identifier for this place.",
        "example" : "f7eb2fa2fea288b1"
      },
      "PlaceType" : {
        "type" : "string",
        "enum" : [
          "poi",
          "neighborhood",
          "city",
          "admin",
          "country",
          "unknown"
        ],
        "example" : "city"
      },
      "PlaidAccount" : {
        "type" : "object",
        "description" : "Descriptor for a Plaid account.",
        "required" : [
          "accountId",
          "accountCategory",
          "accountNumberDisplay",
          "accountType",
          "currency",
          "productName",
          "status"
        ],
        "properties" : {
          "accountCategory" : {
            "type" : "string",
            "description" : "The category of the account (e.g., personal, business)."
          },
          "accountId" : {
            "type" : "string",
            "description" : "The Plaid account ID."
          },
          "accountNumberDisplay" : {
            "type" : "string",
            "description" : "The last 2-4 digits of the account number."
          },
          "accountType" : {
            "type" : "string",
            "description" : "The type of the account (e.g., checking, savings)."
          },
          "availableBalance" : {
            "type" : "number",
            "description" : "The available balance of the account."
          },
          "currency" : {
            "$ref" : "#/components/schemas/PlaidCurrency"
          },
          "currentBalance" : {
            "type" : "number",
            "description" : "The current balance of the account."
          },
          "nickname" : {
            "type" : "string",
            "description" : "The nickname of the account."
          },
          "productName" : {
            "type" : "string",
            "description" : "The name of the product associated with the account."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the account."
          }
        }
      },
      "PlaidAccountContact" : {
        "type" : "object",
        "description" : "Contact information associated with a Plaid account.",
        "required" : [
          "name",
          "addresses",
          "emails",
          "telephones"
        ],
        "properties" : {
          "addresses" : {
            "type" : "array",
            "description" : "List of addresses associated with the account holder.",
            "items" : {
              "$ref" : "#/components/schemas/PlaidAddress"
            }
          },
          "emails" : {
            "type" : "array",
            "description" : "List of email addresses associated with the account holder.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "$ref" : "#/components/schemas/PlaidName"
          },
          "relationship" : {
            "type" : "string",
            "description" : "Relationship of the contact to the account."
          },
          "telephones" : {
            "type" : "array",
            "description" : "List of telephone numbers associated with the account holder.",
            "items" : {
              "$ref" : "#/components/schemas/PlaidTelephone"
            }
          }
        }
      },
      "PlaidAccountPaymentNetwork" : {
        "type" : "object",
        "description" : "Payment network details associated with the account.",
        "required" : [
          "identifier",
          "type",
          "transferIn",
          "transferOut",
          "bankId"
        ],
        "properties" : {
          "bankId" : {
            "type" : "string",
            "description" : "The bank ID associated with the account."
          },
          "identifier" : {
            "type" : "string",
            "description" : "The payment network identifier."
          },
          "transferIn" : {
            "type" : "boolean",
            "description" : "Indicates if transfers into the account are supported."
          },
          "transferOut" : {
            "type" : "boolean",
            "description" : "Indicates if transfers out of the account are supported."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of payment network (e.g., ACH, SEPA)."
          }
        }
      },
      "PlaidAccountTransaction" : {
        "type" : "object",
        "description" : "Descriptor for a Plaid account.",
        "required" : [
          "accountCategory",
          "amount",
          "debitCreditMemo",
          "description",
          "status",
          "transactionId",
          "transactionTimestamp"
        ],
        "properties" : {
          "accountCategory" : {
            "type" : "string",
            "description" : "The category of the account (e.g., personal, business)."
          },
          "amount" : {
            "type" : "number",
            "description" : "The amount transacted."
          },
          "debitCreditMemo" : {
            "type" : "string",
            "description" : "Memo for transaction (e.g. CREDIT)"
          },
          "description" : {
            "type" : "string",
            "description" : "The transaction description"
          },
          "postedTimestamp" : {
            "type" : "string",
            "description" : "The timestamp when the transaction was posted."
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the transaction."
          },
          "transactionId" : {
            "type" : "string",
            "description" : "The identifier for the transaction."
          },
          "transactionTimestamp" : {
            "type" : "string",
            "description" : "The timestamp when the transaction occurred."
          }
        }
      },
      "PlaidAddress" : {
        "type" : "object",
        "description" : "Address information for the account holder.",
        "required" : [
          "city",
          "country",
          "line1"
        ],
        "properties" : {
          "city" : {
            "type" : "string",
            "description" : "The city of the address."
          },
          "country" : {
            "type" : "string",
            "description" : "The country of the address (ISO 3166-1 alpha-2 code)."
          },
          "line1" : {
            "type" : "string",
            "description" : "The first line of the address."
          },
          "line2" : {
            "type" : "string",
            "description" : "The second line of the address."
          },
          "postalCode" : {
            "type" : "string",
            "description" : "The postal code of the address."
          },
          "region" : {
            "type" : "string",
            "description" : "The region or state of the address."
          }
        }
      },
      "PlaidCurrency" : {
        "type" : "object",
        "description" : "Currency information.",
        "required" : [
          "currencyCode"
        ],
        "properties" : {
          "currencyCode" : {
            "type" : "string",
            "description" : "The ISO 4217 currency code."
          }
        }
      },
      "PlaidCustomer" : {
        "type" : "object",
        "description" : "A user id for the plaid customer",
        "properties" : {
          "customerId" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "PlaidName" : {
        "type" : "object",
        "description" : "Name information for the account holder.",
        "required" : [
          "first",
          "last"
        ],
        "properties" : {
          "first" : {
            "type" : "string",
            "description" : "The first name of the account holder."
          },
          "last" : {
            "type" : "string",
            "description" : "The last name of the account holder."
          }
        }
      },
      "PlaidTelephone" : {
        "type" : "object",
        "description" : "Telephone information for the account holder.",
        "required" : [
          "country",
          "number",
          "type"
        ],
        "properties" : {
          "country" : {
            "type" : "string",
            "description" : "The country code for the phone number (e.g., '+1')."
          },
          "number" : {
            "type" : "string",
            "description" : "The phone number."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of phone number (e.g., 'mobile')."
          }
        }
      },
      "Point" : {
        "type" : "object",
        "description" : "A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object.",
        "required" : [
          "type",
          "coordinates"
        ],
        "properties" : {
          "coordinates" : {
            "$ref" : "#/components/schemas/Position"
          },
          "type" : {
            "type" : "string",
            "enum" : [
              "Point"
            ],
            "example" : "Point"
          }
        }
      },
      "Poll" : {
        "type" : "object",
        "description" : "Represent a Poll attached to a Tweet.",
        "required" : [
          "id",
          "options"
        ],
        "properties" : {
          "duration_minutes" : {
            "type" : "integer",
            "minimum" : 5,
            "maximum" : 10080,
            "format" : "int32"
          },
          "end_datetime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "$ref" : "#/components/schemas/PollId"
          },
          "options" : {
            "type" : "array",
            "minItems" : 2,
            "maxItems" : 4,
            "items" : {
              "$ref" : "#/components/schemas/PollOption"
            }
          },
          "voting_status" : {
            "type" : "string",
            "enum" : [
              "open",
              "closed"
            ]
          }
        }
      },
      "PollId" : {
        "type" : "string",
        "description" : "Unique identifier of this poll.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1365059861688410112"
      },
      "PollOption" : {
        "type" : "object",
        "description" : "Describes a choice in a Poll object.",
        "required" : [
          "position",
          "label",
          "votes"
        ],
        "properties" : {
          "label" : {
            "$ref" : "#/components/schemas/PollOptionLabel"
          },
          "position" : {
            "type" : "integer",
            "description" : "Position of this choice in the poll."
          },
          "votes" : {
            "type" : "integer",
            "description" : "Number of users who voted for this choice."
          }
        }
      },
      "PollOptionLabel" : {
        "type" : "string",
        "description" : "The text of a poll choice.",
        "minLength" : 1,
        "maxLength" : 25
      },
      "Position" : {
        "type" : "array",
        "description" : "A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.",
        "minItems" : 2,
        "maxItems" : 2,
        "items" : {
          "type" : "number"
        },
        "example" : [
          -105.18816086351444,
          40.247749999999996
        ]
      },
      "PreviewImage" : {
        "type" : "object",
        "properties" : {
          "media_key" : {
            "type" : "object",
            "properties" : {
              "media" : {
                "$ref" : "#/components/schemas/MediaId"
              },
              "media_category" : {
                "type" : "string",
                "description" : "The media category of media",
                "enum" : [
                  "TweetImage"
                ],
                "default" : "TweetImage",
                "example" : "TweetImage"
              }
            }
          }
        }
      },
      "PreviousToken" : {
        "type" : "string",
        "description" : "The previous token.",
        "minLength" : 1
      },
      "Problem" : {
        "type" : "object",
        "description" : "An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807).",
        "required" : [
          "type",
          "title"
        ],
        "properties" : {
          "detail" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "about:blank" : "#/components/schemas/GenericProblem",
            "https://api.twitter.com/2/problems/client-disconnected" : "#/components/schemas/ClientDisconnectedProblem",
            "https://api.twitter.com/2/problems/client-forbidden" : "#/components/schemas/ClientForbiddenProblem",
            "https://api.twitter.com/2/problems/conflict" : "#/components/schemas/ConflictProblem",
            "https://api.twitter.com/2/problems/disallowed-resource" : "#/components/schemas/DisallowedResourceProblem",
            "https://api.twitter.com/2/problems/duplicate-rules" : "#/components/schemas/DuplicateRuleProblem",
            "https://api.twitter.com/2/problems/invalid-request" : "#/components/schemas/InvalidRequestProblem",
            "https://api.twitter.com/2/problems/invalid-rules" : "#/components/schemas/InvalidRuleProblem",
            "https://api.twitter.com/2/problems/noncompliant-rules" : "#/components/schemas/NonCompliantRulesProblem",
            "https://api.twitter.com/2/problems/not-authorized-for-field" : "#/components/schemas/FieldUnauthorizedProblem",
            "https://api.twitter.com/2/problems/not-authorized-for-resource" : "#/components/schemas/ResourceUnauthorizedProblem",
            "https://api.twitter.com/2/problems/operational-disconnect" : "#/components/schemas/OperationalDisconnectProblem",
            "https://api.twitter.com/2/problems/resource-not-found" : "#/components/schemas/ResourceNotFoundProblem",
            "https://api.twitter.com/2/problems/resource-unavailable" : "#/components/schemas/ResourceUnavailableProblem",
            "https://api.twitter.com/2/problems/rule-cap" : "#/components/schemas/RulesCapProblem",
            "https://api.twitter.com/2/problems/streaming-connection" : "#/components/schemas/ConnectionExceptionProblem",
            "https://api.twitter.com/2/problems/unsupported-authentication" : "#/components/schemas/UnsupportedAuthenticationProblem",
            "https://api.twitter.com/2/problems/usage-capped" : "#/components/schemas/UsageCapExceededProblem"
          }
        }
      },
      "ProcessingInfo" : {
        "type" : "object",
        "required" : [
          "type"
        ],
        "properties" : {
          "check_after_secs" : {
            "type" : "integer",
            "description" : "Number of seconds to check again for status",
            "format" : "int32"
          },
          "progress_percent" : {
            "type" : "integer",
            "description" : "Percent of upload progress",
            "format" : "int32"
          },
          "state" : {
            "type" : "string",
            "description" : "State of upload",
            "enum" : [
              "succeeded",
              "in_progress",
              "pending",
              "failed"
            ]
          }
        }
      },
      "ReplayJobCreateResponse" : {
        "type" : "object",
        "description" : "Confirmation that the replay job request was accepted.",
        "required" : [
          "job_id",
          "created_at"
        ],
        "properties" : {
          "created_at" : {
            "type" : "string",
            "description" : "The UTC timestamp indicating when the replay job was created.",
            "format" : "date-time",
            "example" : "2025-04-24T20:57:15.242Z"
          },
          "job_id" : {
            "type" : "string",
            "description" : "The unique identifier for the initiated replay job.",
            "example" : "1915510368169844736"
          }
        }
      },
      "ReplySettings" : {
        "type" : "string",
        "description" : "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, and following.",
        "pattern" : "^[A-Za-z]{1,12}$",
        "enum" : [
          "everyone",
          "mentionedUsers",
          "following",
          "other"
        ]
      },
      "ReplySettingsWithVerifiedUsers" : {
        "type" : "string",
        "description" : "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, subscribers, verified and following.",
        "pattern" : "^[A-Za-z]{1,12}$",
        "enum" : [
          "everyone",
          "mentionedUsers",
          "following",
          "other",
          "subscribers",
          "verified"
        ]
      },
      "ResourceNotFoundProblem" : {
        "description" : "A problem that indicates that a given Tweet, User, etc. does not exist.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "required" : [
              "parameter",
              "value",
              "resource_id",
              "resource_type"
            ],
            "properties" : {
              "parameter" : {
                "type" : "string",
                "minLength" : 1
              },
              "resource_id" : {
                "type" : "string"
              },
              "resource_type" : {
                "type" : "string",
                "enum" : [
                  "user",
                  "tweet",
                  "media",
                  "list",
                  "space"
                ]
              },
              "value" : {
                "type" : "string",
                "description" : "Value will match the schema of the field."
              }
            }
          }
        ]
      },
      "ResourceUnauthorizedProblem" : {
        "description" : "A problem that indicates you are not allowed to see a particular Tweet, User, etc.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "required" : [
              "value",
              "resource_id",
              "resource_type",
              "section",
              "parameter"
            ],
            "properties" : {
              "parameter" : {
                "type" : "string"
              },
              "resource_id" : {
                "type" : "string"
              },
              "resource_type" : {
                "type" : "string",
                "enum" : [
                  "user",
                  "tweet",
                  "media",
                  "list",
                  "space"
                ]
              },
              "section" : {
                "type" : "string",
                "enum" : [
                  "data",
                  "includes"
                ]
              },
              "value" : {
                "type" : "string"
              }
            }
          }
        ]
      },
      "ResourceUnavailableProblem" : {
        "description" : "A problem that indicates a particular Tweet, User, etc. is not available to you.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "required" : [
              "parameter",
              "resource_id",
              "resource_type"
            ],
            "properties" : {
              "parameter" : {
                "type" : "string",
                "minLength" : 1
              },
              "resource_id" : {
                "type" : "string"
              },
              "resource_type" : {
                "type" : "string",
                "enum" : [
                  "user",
                  "tweet",
                  "media",
                  "list",
                  "space"
                ]
              }
            }
          }
        ]
      },
      "ResultCount" : {
        "type" : "integer",
        "description" : "The number of results returned in this response.",
        "format" : "int32"
      },
      "Rule" : {
        "type" : "object",
        "description" : "A user-provided stream filtering rule.",
        "required" : [
          "value"
        ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/RuleId"
          },
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          },
          "value" : {
            "$ref" : "#/components/schemas/RuleValue"
          }
        }
      },
      "RuleId" : {
        "type" : "string",
        "description" : "Unique identifier of this rule.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "120897978112909812"
      },
      "RuleNoId" : {
        "type" : "object",
        "description" : "A user-provided stream filtering rule.",
        "required" : [
          "value"
        ],
        "properties" : {
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          },
          "value" : {
            "$ref" : "#/components/schemas/RuleValue"
          }
        }
      },
      "RuleTag" : {
        "type" : "string",
        "description" : "A tag meant for the labeling of user provided rules.",
        "example" : "Non-retweeted coffee Posts"
      },
      "RuleValue" : {
        "type" : "string",
        "description" : "The filterlang value of the rule.",
        "example" : "coffee -is:retweet"
      },
      "RulesCapProblem" : {
        "description" : "You have exceeded the maximum number of rules.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "RulesCount" : {
        "type" : "object",
        "description" : "A count of user-provided stream filtering rules at the application and project levels.",
        "properties" : {
          "all_project_client_apps" : {
            "$ref" : "#/components/schemas/AllProjectClientApps"
          },
          "cap_per_client_app" : {
            "type" : "integer",
            "description" : "Cap of number of rules allowed per client application",
            "format" : "int32"
          },
          "cap_per_project" : {
            "type" : "integer",
            "description" : "Cap of number of rules allowed per project",
            "format" : "int32"
          },
          "client_app_rules_count" : {
            "$ref" : "#/components/schemas/AppRulesCount"
          },
          "project_rules_count" : {
            "type" : "integer",
            "description" : "Number of rules for project",
            "format" : "int32"
          }
        }
      },
      "RulesLookupResponse" : {
        "type" : "object",
        "required" : [
          "meta"
        ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Rule"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/RulesResponseMetadata"
          }
        }
      },
      "RulesRequestSummary" : {
        "oneOf" : [
          {
            "type" : "object",
            "description" : "A summary of the results of the addition of user-specified stream filtering rules.",
            "required" : [
              "created",
              "not_created",
              "valid",
              "invalid"
            ],
            "properties" : {
              "created" : {
                "type" : "integer",
                "description" : "Number of user-specified stream filtering rules that were created.",
                "format" : "int32",
                "example" : 1
              },
              "invalid" : {
                "type" : "integer",
                "description" : "Number of invalid user-specified stream filtering rules.",
                "format" : "int32",
                "example" : 1
              },
              "not_created" : {
                "type" : "integer",
                "description" : "Number of user-specified stream filtering rules that were not created.",
                "format" : "int32",
                "example" : 1
              },
              "valid" : {
                "type" : "integer",
                "description" : "Number of valid user-specified stream filtering rules.",
                "format" : "int32",
                "example" : 1
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "deleted",
              "not_deleted"
            ],
            "properties" : {
              "deleted" : {
                "type" : "integer",
                "description" : "Number of user-specified stream filtering rules that were deleted.",
                "format" : "int32"
              },
              "not_deleted" : {
                "type" : "integer",
                "description" : "Number of user-specified stream filtering rules that were not deleted.",
                "format" : "int32"
              }
            }
          }
        ]
      },
      "RulesResponseMetadata" : {
        "type" : "object",
        "required" : [
          "sent"
        ],
        "properties" : {
          "next_token" : {
            "$ref" : "#/components/schemas/NextToken"
          },
          "result_count" : {
            "type" : "integer",
            "description" : "Number of Rules in result set.",
            "format" : "int32"
          },
          "sent" : {
            "type" : "string"
          },
          "summary" : {
            "$ref" : "#/components/schemas/RulesRequestSummary"
          }
        }
      },
      "SearchCount" : {
        "type" : "object",
        "description" : "Represent a Search Count Result.",
        "required" : [
          "end",
          "start",
          "tweet_count"
        ],
        "properties" : {
          "end" : {
            "$ref" : "#/components/schemas/End"
          },
          "start" : {
            "$ref" : "#/components/schemas/Start"
          },
          "tweet_count" : {
            "$ref" : "#/components/schemas/TweetCount"
          }
        }
      },
      "SensitiveMediaWarning" : {
        "type" : "object",
        "properties" : {
          "adult_content" : {
            "type" : "boolean",
            "description" : "Indicates if the content contains adult material",
            "example" : true
          },
          "graphic_violence" : {
            "type" : "boolean",
            "description" : "Indicates if the content depicts graphic violence",
            "example" : true
          },
          "other" : {
            "type" : "boolean",
            "description" : "Indicates if the content has other sensitive characteristics",
            "example" : false
          }
        }
      },
      "SharedInfo" : {
        "type" : "object",
        "properties" : {
          "shared" : {
            "type" : "boolean",
            "description" : "Indicates if the media is shared in direct messages",
            "example" : false
          }
        }
      },
      "Space" : {
        "type" : "object",
        "description" : "",
        "required" : [
          "id",
          "state"
        ],
        "properties" : {
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Space.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "creator_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "ended_at" : {
            "type" : "string",
            "description" : "End time of the Space.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "host_ids" : {
            "type" : "array",
            "description" : "The user ids for the hosts of the Space.",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/SpaceId"
          },
          "invited_user_ids" : {
            "type" : "array",
            "description" : "An array of user ids for people who were invited to a Space.",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "is_ticketed" : {
            "type" : "boolean",
            "description" : "Denotes if the Space is a ticketed Space.",
            "example" : "false"
          },
          "lang" : {
            "type" : "string",
            "description" : "The language of the Space.",
            "example" : "en"
          },
          "participant_count" : {
            "type" : "integer",
            "description" : "The number of participants in a Space.",
            "format" : "int32",
            "example" : 10
          },
          "scheduled_start" : {
            "type" : "string",
            "description" : "A date time stamp for when a Space is scheduled to begin.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "speaker_ids" : {
            "type" : "array",
            "description" : "An array of user ids for people who were speakers in a Space.",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "started_at" : {
            "type" : "string",
            "description" : "When the Space was started as a date string.",
            "format" : "date-time",
            "example" : "2021-7-14T04:35:55Z"
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the Space.",
            "enum" : [
              "live",
              "scheduled",
              "ended"
            ],
            "example" : "live"
          },
          "subscriber_count" : {
            "type" : "integer",
            "description" : "The number of people who have either purchased a ticket or set a reminder for this Space.",
            "format" : "int32",
            "example" : 10
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the Space.",
            "example" : "Spaces are Awesome"
          },
          "topics" : {
            "type" : "array",
            "description" : "The topics of a Space, as selected by its creator.",
            "items" : {
              "type" : "object",
              "description" : "The X Topic object.",
              "required" : [
                "id",
                "name"
              ],
              "properties" : {
                "description" : {
                  "type" : "string",
                  "description" : "The description of the given topic."
                },
                "id" : {
                  "type" : "string",
                  "description" : "An ID suitable for use in the REST API."
                },
                "name" : {
                  "type" : "string",
                  "description" : "The name of the given topic."
                }
              },
              "example" : {
                "description" : "All about technology",
                "id" : "848920371311001600",
                "name" : "Technology"
              }
            }
          },
          "updated_at" : {
            "type" : "string",
            "description" : "When the Space was last updated.",
            "format" : "date-time",
            "example" : "2021-7-14T04:35:55Z"
          }
        }
      },
      "SpaceId" : {
        "type" : "string",
        "description" : "The unique identifier of this Space.",
        "pattern" : "^[a-zA-Z0-9]{1,13}$",
        "example" : "1SLjjRYNejbKM"
      },
      "Start" : {
        "type" : "string",
        "description" : "The start time of the bucket.",
        "format" : "date-time"
      },
      "Sticker" : {
        "type" : "object",
        "properties" : {
          "aspect_ratio" : {
            "type" : "number",
            "description" : "width-to-height ratio of the media",
            "format" : "double",
            "example" : 1.78
          },
          "group_annotation_id" : {
            "type" : "number",
            "description" : "A unique identifier for the group of annotations associated with the media",
            "format" : "long",
            "example" : 987654321098765
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for sticker",
            "example" : "12345"
          },
          "sticker_set_annotation_id" : {
            "type" : "number",
            "description" : "A unique identifier for the sticker set associated with the media",
            "format" : "long",
            "example" : 123456789012345
          },
          "transform_a" : {
            "type" : "number",
            "description" : "Scale or rotate the media on the x-axis",
            "format" : "double",
            "example" : 1.0
          },
          "transform_b" : {
            "type" : "number",
            "description" : "Skew the media on the x-axis",
            "format" : "double",
            "example" : 0.0
          },
          "transform_c" : {
            "type" : "number",
            "description" : "Skew the media on the y-axis",
            "format" : "double",
            "example" : 0.0
          },
          "transform_d" : {
            "type" : "number",
            "description" : "Scale or rotate the media on the y-axis",
            "format" : "double",
            "example" : 1.0
          },
          "transform_tx" : {
            "type" : "number",
            "description" : "Scale or rotate the media on the x-axis",
            "format" : "double",
            "example" : 10.5
          },
          "transform_ty" : {
            "type" : "number",
            "description" : "The vertical translation (shift) value for the media",
            "format" : "double",
            "example" : -5.2
          }
        }
      },
      "StickerInfo" : {
        "type" : "object",
        "properties" : {
          "stickers" : {
            "type" : "array",
            "description" : "Stickers list must not be empty and should not exceed 25",
            "items" : {
              "$ref" : "#/components/schemas/Sticker"
            }
          }
        }
      },
      "StreamingLikeResponseV2" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeWithTweetAuthor"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "StreamingTweetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          }
        }
      },
      "SubscriptionsCountGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "description" : "The count of active subscriptions across all webhooks",
            "required" : [
              "account_name",
              "provisioned_count",
              "subscriptions_count_all",
              "subscriptions_count_direct_messages"
            ],
            "properties" : {
              "account_name" : {
                "type" : "string",
                "description" : "The account name"
              },
              "provisioned_count" : {
                "type" : "string",
                "description" : "The limit for subscriptions for this app"
              },
              "subscriptions_count_all" : {
                "type" : "string",
                "description" : "The number of active subscriptions across all webhooks"
              },
              "subscriptions_count_direct_messages" : {
                "type" : "string",
                "description" : "The number of active direct message subscriptions"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubscriptionsCreateRequest" : {
        "type" : "object"
      },
      "SubscriptionsCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "subscribed" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubscriptionsDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "subscribed" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubscriptionsGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "subscribed" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubscriptionsListGetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "description" : "The list of active subscriptions for a specified webhook",
            "required" : [
              "application_id",
              "webhook_id",
              "webhook_url",
              "subscriptions"
            ],
            "properties" : {
              "application_id" : {
                "type" : "string",
                "description" : "The application ID"
              },
              "subscriptions" : {
                "type" : "array",
                "description" : "List of active subscriptions for the webhook",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "user_id" : {
                      "type" : "string",
                      "description" : "The ID of the user the webhook is subscribed to"
                    }
                  }
                }
              },
              "webhook_id" : {
                "type" : "string",
                "description" : "The associated webhook ID"
              },
              "webhook_url" : {
                "type" : "string",
                "description" : "The url for the associated webhook"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubtitleLanguageCode" : {
        "type" : "string",
        "description" : "The language code should be a BCP47 code (e.g. 'EN\", \"SP\")",
        "pattern" : "^[A-Z]{2}$",
        "example" : "EN"
      },
      "Subtitles" : {
        "type" : "object",
        "properties" : {
          "display_name" : {
            "type" : "string",
            "description" : "Language name in a human readable form",
            "example" : "English"
          },
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "language_code" : {
            "$ref" : "#/components/schemas/SubtitleLanguageCode"
          }
        }
      },
      "SubtitlesCreateRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "media_category" : {
            "$ref" : "#/components/schemas/MediaCategorySubtitles"
          },
          "subtitles" : {
            "$ref" : "#/components/schemas/Subtitles"
          }
        }
      },
      "SubtitlesCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "required" : [
              "id",
              "media_category",
              "associated_subtitles"
            ],
            "properties" : {
              "associated_subtitles" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/Subtitles"
                }
              },
              "id" : {
                "$ref" : "#/components/schemas/MediaId"
              },
              "media_category" : {
                "$ref" : "#/components/schemas/MediaCategorySubtitles"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SubtitlesDeleteRequest" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/MediaId"
          },
          "language_code" : {
            "$ref" : "#/components/schemas/SubtitleLanguageCode"
          },
          "media_category" : {
            "$ref" : "#/components/schemas/MediaCategorySubtitles"
          }
        }
      },
      "SubtitlesDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "required" : [
              "deleted"
            ],
            "properties" : {
              "deleted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TimestampedMetrics" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "$ref" : "#/components/schemas/Metrics"
          },
          "timestamp" : {
            "type" : "string",
            "title" : "Timestamp",
            "description" : "ISO8601 Time",
            "example" : "2025-03-17T06:30:00Z"
          }
        }
      },
      "Topic" : {
        "type" : "object",
        "description" : "The topic of a Space, as selected by its creator.",
        "required" : [
          "id",
          "name"
        ],
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "The description of the given topic.",
            "example" : "All about technology"
          },
          "id" : {
            "$ref" : "#/components/schemas/TopicId"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the given topic.",
            "example" : "Technology"
          }
        }
      },
      "TopicId" : {
        "type" : "string",
        "description" : "Unique identifier of this Topic."
      },
      "Trend" : {
        "type" : "object",
        "description" : "A trend.",
        "properties" : {
          "trend_name" : {
            "type" : "string",
            "description" : "Name of the trend."
          },
          "tweet_count" : {
            "type" : "integer",
            "description" : "Number of Posts in this trend.",
            "format" : "int32"
          }
        }
      },
      "Tweet" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "type" : "object",
            "description" : "Specifies the type of attachments (if any) present in this Tweet.",
            "properties" : {
              "media_keys" : {
                "type" : "array",
                "description" : "A list of Media Keys for each one of the media attachments (if media are attached).",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/MediaKey"
                }
              },
              "media_source_tweet_id" : {
                "type" : "array",
                "description" : "A list of Posts the media on this Tweet was originally posted in. For example, if the media on a tweet is re-used in another Tweet, this refers to the original, source Tweet..",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/TweetId"
                }
              },
              "poll_ids" : {
                "type" : "array",
                "description" : "A list of poll IDs (if polls are attached).",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/PollId"
                }
              }
            }
          },
          "author_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "community_id" : {
            "$ref" : "#/components/schemas/CommunityId"
          },
          "context_annotations" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/ContextAnnotation"
            }
          },
          "conversation_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Tweet.",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40.000Z"
          },
          "display_text_range" : {
            "$ref" : "#/components/schemas/DisplayTextRange"
          },
          "edit_controls" : {
            "type" : "object",
            "required" : [
              "is_edit_eligible",
              "editable_until",
              "edits_remaining"
            ],
            "properties" : {
              "editable_until" : {
                "type" : "string",
                "description" : "Time when Tweet is no longer editable.",
                "format" : "date-time",
                "example" : "2021-01-06T18:40:40.000Z"
              },
              "edits_remaining" : {
                "type" : "integer",
                "description" : "Number of times this Tweet can be edited."
              },
              "is_edit_eligible" : {
                "type" : "boolean",
                "description" : "Indicates if this Tweet is eligible to be edited.",
                "example" : false
              }
            }
          },
          "edit_history_tweet_ids" : {
            "type" : "array",
            "description" : "A list of Tweet Ids in this Tweet chain.",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          },
          "entities" : {
            "$ref" : "#/components/schemas/FullTextEntities"
          },
          "geo" : {
            "type" : "object",
            "description" : "The location tagged on the Tweet, if the user provided one.",
            "properties" : {
              "coordinates" : {
                "$ref" : "#/components/schemas/Point"
              },
              "place_id" : {
                "$ref" : "#/components/schemas/PlaceId"
              }
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "in_reply_to_user_id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "lang" : {
            "type" : "string",
            "description" : "Language of the Tweet, if detected by X. Returned as a BCP47 language tag.",
            "example" : "en"
          },
          "non_public_metrics" : {
            "type" : "object",
            "description" : "Nonpublic engagement metrics for the Tweet at the time of the request.",
            "properties" : {
              "impression_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been viewed.",
                "format" : "int32"
              }
            }
          },
          "note_tweet" : {
            "type" : "object",
            "description" : "The full-content of the Tweet, including text beyond 280 characters.",
            "properties" : {
              "entities" : {
                "type" : "object",
                "properties" : {
                  "cashtags" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/CashtagEntity"
                    }
                  },
                  "hashtags" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/HashtagEntity"
                    }
                  },
                  "mentions" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/MentionEntity"
                    }
                  },
                  "urls" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/UrlEntity"
                    }
                  }
                }
              },
              "text" : {
                "$ref" : "#/components/schemas/NoteTweetText"
              }
            }
          },
          "organic_metrics" : {
            "type" : "object",
            "description" : "Organic nonpublic engagement metrics for the Tweet at the time of the request.",
            "required" : [
              "impression_count",
              "retweet_count",
              "reply_count",
              "like_count"
            ],
            "properties" : {
              "impression_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been viewed."
              },
              "like_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been liked."
              },
              "reply_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been replied to."
              },
              "retweet_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been Retweeted."
              }
            }
          },
          "possibly_sensitive" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.",
            "example" : false
          },
          "promoted_metrics" : {
            "type" : "object",
            "description" : "Promoted nonpublic engagement metrics for the Tweet at the time of the request.",
            "properties" : {
              "impression_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been viewed.",
                "format" : "int32"
              },
              "like_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been liked.",
                "format" : "int32"
              },
              "reply_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been replied to.",
                "format" : "int32"
              },
              "retweet_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been Retweeted.",
                "format" : "int32"
              }
            }
          },
          "public_metrics" : {
            "type" : "object",
            "description" : "Engagement metrics for the Tweet at the time of the request.",
            "required" : [
              "retweet_count",
              "reply_count",
              "like_count",
              "impression_count",
              "bookmark_count"
            ],
            "properties" : {
              "bookmark_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been bookmarked.",
                "format" : "int32"
              },
              "impression_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been viewed.",
                "format" : "int32"
              },
              "like_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been liked."
              },
              "quote_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been quoted."
              },
              "reply_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been replied to."
              },
              "retweet_count" : {
                "type" : "integer",
                "description" : "Number of times this Tweet has been Retweeted."
              }
            }
          },
          "referenced_tweets" : {
            "type" : "array",
            "description" : "A list of Posts this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.",
            "minItems" : 1,
            "items" : {
              "type" : "object",
              "required" : [
                "type",
                "id"
              ],
              "properties" : {
                "id" : {
                  "$ref" : "#/components/schemas/TweetId"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [
                    "retweeted",
                    "quoted",
                    "replied_to"
                  ]
                }
              }
            }
          },
          "reply_settings" : {
            "$ref" : "#/components/schemas/ReplySettingsWithVerifiedUsers"
          },
          "scopes" : {
            "type" : "object",
            "description" : "The scopes for this tweet",
            "properties" : {
              "followers" : {
                "type" : "boolean",
                "description" : "Indicates if this Tweet is viewable by followers without the Tweet ID",
                "example" : false
              }
            }
          },
          "source" : {
            "type" : "string",
            "description" : "This is deprecated."
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          },
          "withheld" : {
            "$ref" : "#/components/schemas/TweetWithheld"
          }
        },
        "example" : {
          "author_id" : "2244994945",
          "created_at" : "Wed Jan 06 18:40:40 +0000 2021",
          "id" : "1346889436626259968",
          "text" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i",
          "username" : "XDevelopers"
        }
      },
      "TweetComplianceData" : {
        "description" : "Tweet compliance data.",
        "oneOf" : [
          {
            "$ref" : "#/components/schemas/TweetDeleteComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/TweetWithheldComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/TweetDropComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/TweetUndropComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/TweetEditComplianceSchema"
          }
        ]
      },
      "TweetComplianceSchema" : {
        "type" : "object",
        "required" : [
          "tweet",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "quote_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "tweet" : {
            "type" : "object",
            "required" : [
              "id",
              "author_id"
            ],
            "properties" : {
              "author_id" : {
                "$ref" : "#/components/schemas/UserId"
              },
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            }
          }
        }
      },
      "TweetComplianceStreamResponse" : {
        "description" : "Tweet compliance stream events.",
        "oneOf" : [
          {
            "type" : "object",
            "description" : "Compliance event.",
            "required" : [
              "data"
            ],
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TweetComplianceData"
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "errors"
            ],
            "properties" : {
              "errors" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        ]
      },
      "TweetCount" : {
        "type" : "integer",
        "description" : "The count for the bucket."
      },
      "TweetCreateRequest" : {
        "type" : "object",
        "properties" : {
          "card_uri" : {
            "type" : "string",
            "description" : "Card Uri Parameter. This is mutually exclusive from Quote Tweet Id, Poll, Media, and Direct Message Deep Link."
          },
          "community_id" : {
            "$ref" : "#/components/schemas/CommunityId"
          },
          "direct_message_deep_link" : {
            "type" : "string",
            "description" : "Link to take the conversation from the public timeline to a private Direct Message."
          },
          "for_super_followers_only" : {
            "type" : "boolean",
            "description" : "Exclusive Tweet for super followers.",
            "default" : false
          },
          "geo" : {
            "type" : "object",
            "description" : "Place ID being attached to the Tweet for geo location.",
            "properties" : {
              "place_id" : {
                "type" : "string"
              }
            },
            "additionalProperties" : false
          },
          "media" : {
            "type" : "object",
            "description" : "Media information being attached to created Tweet. This is mutually exclusive from Quote Tweet Id, Poll, and Card URI.",
            "required" : [
              "media_ids"
            ],
            "properties" : {
              "media_ids" : {
                "type" : "array",
                "description" : "A list of Media Ids to be attached to a created Tweet.",
                "minItems" : 1,
                "maxItems" : 4,
                "items" : {
                  "$ref" : "#/components/schemas/MediaId"
                }
              },
              "tagged_user_ids" : {
                "type" : "array",
                "description" : "A list of User Ids to be tagged in the media for created Tweet.",
                "minItems" : 0,
                "maxItems" : 10,
                "items" : {
                  "$ref" : "#/components/schemas/UserId"
                }
              }
            },
            "additionalProperties" : false
          },
          "nullcast" : {
            "type" : "boolean",
            "description" : "Nullcasted (promoted-only) Posts do not appear in the public timeline and are not served to followers.",
            "default" : false
          },
          "poll" : {
            "type" : "object",
            "description" : "Poll options for a Tweet with a poll. This is mutually exclusive from Media, Quote Tweet Id, and Card URI.",
            "required" : [
              "options",
              "duration_minutes"
            ],
            "properties" : {
              "duration_minutes" : {
                "type" : "integer",
                "description" : "Duration of the poll in minutes.",
                "minimum" : 5,
                "maximum" : 10080,
                "format" : "int32"
              },
              "options" : {
                "type" : "array",
                "minItems" : 2,
                "maxItems" : 4,
                "items" : {
                  "type" : "string",
                  "description" : "The text of a poll choice.",
                  "minLength" : 1,
                  "maxLength" : 25
                }
              },
              "reply_settings" : {
                "type" : "string",
                "description" : "Settings to indicate who can reply to the Tweet.",
                "enum" : [
                  "following",
                  "mentionedUsers",
                  "subscribers",
                  "verified"
                ]
              }
            },
            "additionalProperties" : false
          },
          "quote_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "reply" : {
            "type" : "object",
            "description" : "Tweet information of the Tweet being replied to.",
            "required" : [
              "in_reply_to_tweet_id"
            ],
            "properties" : {
              "exclude_reply_user_ids" : {
                "type" : "array",
                "description" : "A list of User Ids to be excluded from the reply Tweet.",
                "items" : {
                  "$ref" : "#/components/schemas/UserId"
                }
              },
              "in_reply_to_tweet_id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            },
            "additionalProperties" : false
          },
          "reply_settings" : {
            "type" : "string",
            "description" : "Settings to indicate who can reply to the Tweet.",
            "enum" : [
              "following",
              "mentionedUsers",
              "subscribers",
              "verified"
            ]
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          }
        },
        "additionalProperties" : false
      },
      "TweetCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "required" : [
              "id",
              "text"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              },
              "text" : {
                "$ref" : "#/components/schemas/TweetText"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetDeleteComplianceSchema" : {
        "type" : "object",
        "required" : [
          "delete"
        ],
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "TweetDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "required" : [
              "deleted"
            ],
            "properties" : {
              "deleted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetDropComplianceSchema" : {
        "type" : "object",
        "required" : [
          "drop"
        ],
        "properties" : {
          "drop" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "TweetEditComplianceObjectSchema" : {
        "type" : "object",
        "required" : [
          "tweet",
          "event_at",
          "initial_tweet_id",
          "edit_tweet_ids"
        ],
        "properties" : {
          "edit_tweet_ids" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "initial_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "tweet" : {
            "type" : "object",
            "required" : [
              "id"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            }
          }
        }
      },
      "TweetEditComplianceSchema" : {
        "type" : "object",
        "required" : [
          "tweet_edit"
        ],
        "properties" : {
          "tweet_edit" : {
            "$ref" : "#/components/schemas/TweetEditComplianceObjectSchema"
          }
        }
      },
      "TweetHideRequest" : {
        "type" : "object",
        "required" : [
          "hidden"
        ],
        "properties" : {
          "hidden" : {
            "type" : "boolean"
          }
        }
      },
      "TweetHideResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "hidden" : {
                "type" : "boolean"
              }
            }
          }
        }
      },
      "TweetId" : {
        "type" : "string",
        "description" : "Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1346889436626259968"
      },
      "TweetLabelData" : {
        "description" : "Tweet label data.",
        "oneOf" : [
          {
            "$ref" : "#/components/schemas/TweetNoticeSchema"
          },
          {
            "$ref" : "#/components/schemas/TweetUnviewableSchema"
          }
        ]
      },
      "TweetLabelStreamResponse" : {
        "description" : "Tweet label stream events.",
        "oneOf" : [
          {
            "type" : "object",
            "description" : "Tweet Label event.",
            "required" : [
              "data"
            ],
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TweetLabelData"
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "errors"
            ],
            "properties" : {
              "errors" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        ]
      },
      "TweetNotice" : {
        "type" : "object",
        "required" : [
          "tweet",
          "event_type",
          "event_at",
          "application"
        ],
        "properties" : {
          "application" : {
            "type" : "string",
            "description" : "If the label is being applied or removed. Possible values are ‘apply’ or ‘remove’.",
            "example" : "apply"
          },
          "details" : {
            "type" : "string",
            "description" : "Information shown on the Tweet label"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "event_type" : {
            "type" : "string",
            "description" : "The type of label on the Tweet",
            "example" : "misleading"
          },
          "extended_details_url" : {
            "type" : "string",
            "description" : "Link to more information about this kind of label"
          },
          "label_title" : {
            "type" : "string",
            "description" : "Title/header of the Tweet label"
          },
          "tweet" : {
            "type" : "object",
            "required" : [
              "id",
              "author_id"
            ],
            "properties" : {
              "author_id" : {
                "$ref" : "#/components/schemas/UserId"
              },
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            }
          }
        }
      },
      "TweetNoticeSchema" : {
        "type" : "object",
        "required" : [
          "public_tweet_notice"
        ],
        "properties" : {
          "public_tweet_notice" : {
            "$ref" : "#/components/schemas/TweetNotice"
          }
        }
      },
      "TweetTakedownComplianceSchema" : {
        "type" : "object",
        "required" : [
          "tweet",
          "withheld_in_countries",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "quote_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "tweet" : {
            "type" : "object",
            "required" : [
              "id",
              "author_id"
            ],
            "properties" : {
              "author_id" : {
                "$ref" : "#/components/schemas/UserId"
              },
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            }
          },
          "withheld_in_countries" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            }
          }
        }
      },
      "TweetText" : {
        "type" : "string",
        "description" : "The content of the Tweet.",
        "example" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i"
      },
      "TweetUndropComplianceSchema" : {
        "type" : "object",
        "required" : [
          "undrop"
        ],
        "properties" : {
          "undrop" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "TweetUnviewable" : {
        "type" : "object",
        "required" : [
          "tweet",
          "event_at",
          "application"
        ],
        "properties" : {
          "application" : {
            "type" : "string",
            "description" : "If the label is being applied or removed. Possible values are ‘apply’ or ‘remove’.",
            "example" : "apply"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "tweet" : {
            "type" : "object",
            "required" : [
              "id",
              "author_id"
            ],
            "properties" : {
              "author_id" : {
                "$ref" : "#/components/schemas/UserId"
              },
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              }
            }
          }
        }
      },
      "TweetUnviewableSchema" : {
        "type" : "object",
        "required" : [
          "public_tweet_unviewable"
        ],
        "properties" : {
          "public_tweet_unviewable" : {
            "$ref" : "#/components/schemas/TweetUnviewable"
          }
        }
      },
      "TweetWithheld" : {
        "type" : "object",
        "description" : "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).",
        "required" : [
          "copyright",
          "country_codes"
        ],
        "properties" : {
          "copyright" : {
            "type" : "boolean",
            "description" : "Indicates if the content is being withheld for on the basis of copyright infringement."
          },
          "country_codes" : {
            "type" : "array",
            "description" : "Provides a list of countries where this content is not available.",
            "minItems" : 1,
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            }
          },
          "scope" : {
            "type" : "string",
            "description" : "Indicates whether the content being withheld is the `tweet` or a `user`.",
            "enum" : [
              "tweet",
              "user"
            ]
          }
        }
      },
      "TweetWithheldComplianceSchema" : {
        "type" : "object",
        "required" : [
          "withheld"
        ],
        "properties" : {
          "withheld" : {
            "$ref" : "#/components/schemas/TweetTakedownComplianceSchema"
          }
        }
      },
      "UnlikeComplianceSchema" : {
        "type" : "object",
        "required" : [
          "favorite",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "favorite" : {
            "type" : "object",
            "required" : [
              "id",
              "user_id"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              },
              "user_id" : {
                "$ref" : "#/components/schemas/UserId"
              }
            }
          }
        }
      },
      "UnsupportedAuthenticationProblem" : {
        "description" : "A problem that indicates that the authentication used is not supported.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          }
        ]
      },
      "UploadExpiration" : {
        "type" : "string",
        "description" : "Expiration time of the upload URL.",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40.000Z"
      },
      "UploadSource" : {
        "type" : "object",
        "properties" : {
          "upload_source" : {
            "type" : "string",
            "description" : "Records the source (e.g., app, device) from which the media was uploaded",
            "example" : "gallery"
          }
        }
      },
      "UploadUrl" : {
        "type" : "string",
        "description" : "URL to which the user will upload their Tweet or user IDs.",
        "format" : "uri"
      },
      "Url" : {
        "type" : "string",
        "description" : "A validly formatted URL.",
        "format" : "uri",
        "example" : "https://developer.twitter.com/en/docs/twitter-api"
      },
      "UrlEntity" : {
        "description" : "Represent the portion of text recognized as a URL, and its start and end position within the text.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
          },
          {
            "$ref" : "#/components/schemas/UrlFields"
          }
        ]
      },
      "UrlEntityDm" : {
        "description" : "Represent the portion of text recognized as a URL, and its start and end position within the text.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
          },
          {
            "$ref" : "#/components/schemas/UrlFields"
          }
        ]
      },
      "UrlFields" : {
        "type" : "object",
        "description" : "Represent the portion of text recognized as a URL.",
        "required" : [
          "url"
        ],
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the URL landing page.",
            "example" : "This is a description of the website."
          },
          "display_url" : {
            "type" : "string",
            "description" : "The URL as displayed in the X client.",
            "example" : "twittercommunity.com/t/introducing-…"
          },
          "expanded_url" : {
            "$ref" : "#/components/schemas/Url"
          },
          "images" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/UrlImage"
            }
          },
          "media_key" : {
            "$ref" : "#/components/schemas/MediaKey"
          },
          "status" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the page the URL points to.",
            "example" : "Introducing the v2 follow lookup endpoints"
          },
          "unwound_url" : {
            "type" : "string",
            "description" : "Fully resolved url.",
            "format" : "uri",
            "example" : "https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118"
          },
          "url" : {
            "$ref" : "#/components/schemas/Url"
          }
        }
      },
      "UrlImage" : {
        "type" : "object",
        "description" : "Represent the information for the URL image.",
        "properties" : {
          "height" : {
            "$ref" : "#/components/schemas/MediaHeight"
          },
          "url" : {
            "$ref" : "#/components/schemas/Url"
          },
          "width" : {
            "$ref" : "#/components/schemas/MediaWidth"
          }
        }
      },
      "Usage" : {
        "type" : "object",
        "description" : "Usage per client app",
        "properties" : {
          "cap_reset_day" : {
            "type" : "integer",
            "description" : "Number of days left for the Tweet cap to reset",
            "format" : "int32"
          },
          "daily_client_app_usage" : {
            "type" : "array",
            "description" : "The daily usage breakdown for each Client Application a project",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/ClientAppUsage"
            }
          },
          "daily_project_usage" : {
            "type" : "object",
            "description" : "The daily usage breakdown for a project",
            "properties" : {
              "project_id" : {
                "type" : "integer",
                "description" : "The unique identifier for this project",
                "format" : "int32"
              },
              "usage" : {
                "type" : "array",
                "description" : "The usage value",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/UsageFields"
                }
              }
            }
          },
          "project_cap" : {
            "type" : "integer",
            "description" : "Total number of Posts that can be read in this project per month",
            "format" : "int32"
          },
          "project_id" : {
            "type" : "string",
            "description" : "The unique identifier for this project",
            "format" : "^[0-9]{1,19}$"
          },
          "project_usage" : {
            "type" : "integer",
            "description" : "The number of Posts read in this project",
            "format" : "int32"
          }
        }
      },
      "UsageCapExceededProblem" : {
        "description" : "A problem that indicates that a usage cap has been exceeded.",
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Problem"
          },
          {
            "type" : "object",
            "properties" : {
              "period" : {
                "type" : "string",
                "enum" : [
                  "Daily",
                  "Monthly"
                ]
              },
              "scope" : {
                "type" : "string",
                "enum" : [
                  "Account",
                  "Product"
                ]
              }
            }
          }
        ]
      },
      "UsageFields" : {
        "type" : "object",
        "description" : "Represents the data for Usage",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The time period for the usage",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40.000Z"
          },
          "usage" : {
            "type" : "integer",
            "description" : "The usage value",
            "format" : "int32"
          }
        }
      },
      "User" : {
        "type" : "object",
        "description" : "The X User object.",
        "required" : [
          "id",
          "name",
          "username"
        ],
        "properties" : {
          "affiliation" : {
            "type" : "object",
            "description" : "Metadata about a user's affiliation.",
            "properties" : {
              "badge_url" : {
                "type" : "string",
                "description" : "The badge URL corresponding to the affiliation.",
                "format" : "uri"
              },
              "description" : {
                "type" : "string",
                "description" : "The description of the affiliation."
              },
              "url" : {
                "type" : "string",
                "description" : "The URL, if available, to details about an affiliation.",
                "format" : "uri"
              },
              "user_id" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/UserId"
                }
              }
            }
          },
          "connection_status" : {
            "type" : "array",
            "description" : "Returns detailed information about the relationship between two users.",
            "minItems" : 0,
            "items" : {
              "type" : "string",
              "description" : "Type of connection between users.",
              "enum" : [
                "follow_request_received",
                "follow_request_sent",
                "blocking",
                "followed_by",
                "following",
                "muting"
              ]
            }
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of this User.",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string",
            "description" : "The text of this User's profile description (also known as bio), if the User provided one."
          },
          "entities" : {
            "type" : "object",
            "description" : "A list of metadata found in the User's profile description.",
            "properties" : {
              "description" : {
                "$ref" : "#/components/schemas/FullTextEntities"
              },
              "url" : {
                "type" : "object",
                "description" : "Expanded details for the URL specified in the User's profile, with start and end indices.",
                "properties" : {
                  "urls" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "$ref" : "#/components/schemas/UrlEntity"
                    }
                  }
                }
              }
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "location" : {
            "type" : "string",
            "description" : "The location specified in the User's profile, if the User provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries."
          },
          "most_recent_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "name" : {
            "type" : "string",
            "description" : "The friendly name of this User, as shown on their profile."
          },
          "pinned_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "profile_banner_url" : {
            "type" : "string",
            "description" : "The URL to the profile banner for this User.",
            "format" : "uri"
          },
          "profile_image_url" : {
            "type" : "string",
            "description" : "The URL to the profile image for this User.",
            "format" : "uri"
          },
          "protected" : {
            "type" : "boolean",
            "description" : "Indicates if this User has chosen to protect their Posts (in other words, if this User's Posts are private)."
          },
          "public_metrics" : {
            "type" : "object",
            "description" : "A list of metrics for this User.",
            "required" : [
              "followers_count",
              "following_count",
              "tweet_count",
              "listed_count"
            ],
            "properties" : {
              "followers_count" : {
                "type" : "integer",
                "description" : "Number of Users who are following this User."
              },
              "following_count" : {
                "type" : "integer",
                "description" : "Number of Users this User is following."
              },
              "like_count" : {
                "type" : "integer",
                "description" : "The number of likes created by this User."
              },
              "listed_count" : {
                "type" : "integer",
                "description" : "The number of lists that include this User."
              },
              "tweet_count" : {
                "type" : "integer",
                "description" : "The number of Posts (including Retweets) posted by this User."
              }
            }
          },
          "receives_your_dm" : {
            "type" : "boolean",
            "description" : "Indicates if you can send a DM to this User"
          },
          "subscription_type" : {
            "type" : "string",
            "description" : "The X Blue subscription type of the user, eg: Basic, Premium, PremiumPlus or None.",
            "enum" : [
              "Basic",
              "Premium",
              "PremiumPlus",
              "None"
            ]
          },
          "url" : {
            "type" : "string",
            "description" : "The URL specified in the User's profile."
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          },
          "verified" : {
            "type" : "boolean",
            "description" : "Indicate if this User is a verified X User."
          },
          "verified_type" : {
            "type" : "string",
            "description" : "The X Blue verified type of the user, eg: blue, government, business or none.",
            "enum" : [
              "blue",
              "government",
              "business",
              "none"
            ]
          },
          "withheld" : {
            "$ref" : "#/components/schemas/UserWithheld"
          }
        },
        "example" : {
          "created_at" : "2013-12-14T04:35:55Z",
          "id" : "2244994945",
          "name" : "X Dev",
          "protected" : false,
          "username" : "TwitterDev"
        }
      },
      "UserComplianceData" : {
        "description" : "User compliance data.",
        "oneOf" : [
          {
            "$ref" : "#/components/schemas/UserProtectComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserUnprotectComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserDeleteComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserUndeleteComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserSuspendComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserUnsuspendComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserWithheldComplianceSchema"
          },
          {
            "$ref" : "#/components/schemas/UserScrubGeoSchema"
          },
          {
            "$ref" : "#/components/schemas/UserProfileModificationComplianceSchema"
          }
        ]
      },
      "UserComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "user" : {
            "type" : "object",
            "required" : [
              "id"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/UserId"
              }
            }
          }
        }
      },
      "UserComplianceStreamResponse" : {
        "description" : "User compliance stream events.",
        "oneOf" : [
          {
            "type" : "object",
            "description" : "User compliance event.",
            "required" : [
              "data"
            ],
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UserComplianceData"
              }
            }
          },
          {
            "type" : "object",
            "required" : [
              "errors"
            ],
            "properties" : {
              "errors" : {
                "type" : "array",
                "minItems" : 1,
                "items" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        ]
      },
      "UserDeleteComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_delete"
        ],
        "properties" : {
          "user_delete" : {
            "$ref" : "#/components/schemas/UserComplianceSchema"
          }
        }
      },
      "UserId" : {
        "type" : "string",
        "description" : "Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "2244994945"
      },
      "UserIdMatchesAuthenticatedUser" : {
        "type" : "string",
        "description" : "Unique identifier of this User. The value must be the same as the authenticated user.",
        "example" : "2244994945"
      },
      "UserName" : {
        "type" : "string",
        "description" : "The X handle (screen name) of this user.",
        "pattern" : "^[A-Za-z0-9_]{1,15}$"
      },
      "UserProfileModificationComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_profile_modification"
        ],
        "properties" : {
          "user_profile_modification" : {
            "$ref" : "#/components/schemas/UserProfileModificationObjectSchema"
          }
        }
      },
      "UserProfileModificationObjectSchema" : {
        "type" : "object",
        "required" : [
          "user",
          "profile_field",
          "new_value",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "new_value" : {
            "type" : "string"
          },
          "profile_field" : {
            "type" : "string"
          },
          "user" : {
            "type" : "object",
            "required" : [
              "id"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/UserId"
              }
            }
          }
        }
      },
      "UserProtectComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_protect"
        ],
        "properties" : {
          "user_protect" : {
            "$ref" : "#/components/schemas/UserComplianceSchema"
          }
        }
      },
      "UserScrubGeoObjectSchema" : {
        "type" : "object",
        "required" : [
          "user",
          "up_to_tweet_id",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "up_to_tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "user" : {
            "type" : "object",
            "required" : [
              "id"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/UserId"
              }
            }
          }
        }
      },
      "UserScrubGeoSchema" : {
        "type" : "object",
        "required" : [
          "scrub_geo"
        ],
        "properties" : {
          "scrub_geo" : {
            "$ref" : "#/components/schemas/UserScrubGeoObjectSchema"
          }
        }
      },
      "UserSearchQueryVnext" : {
        "type" : "string",
        "description" : "The the search string by which to query for users.",
        "pattern" : "^[A-Za-z0-9_' ]{1,50}$"
      },
      "UserSuspendComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_suspend"
        ],
        "properties" : {
          "user_suspend" : {
            "$ref" : "#/components/schemas/UserComplianceSchema"
          }
        }
      },
      "UserTakedownComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user",
          "withheld_in_countries",
          "event_at"
        ],
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time.",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40.000Z"
          },
          "user" : {
            "type" : "object",
            "required" : [
              "id"
            ],
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/UserId"
              }
            }
          },
          "withheld_in_countries" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            }
          }
        }
      },
      "UserUndeleteComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_undelete"
        ],
        "properties" : {
          "user_undelete" : {
            "$ref" : "#/components/schemas/UserComplianceSchema"
          }
        }
      },
      "UserUnprotectComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_unprotect"
        ],
        "properties" : {
          "user_unprotect" : {
            "$ref" : "#/components/schemas/UserComplianceSchema"
          }
        }
      },
      "UserUnsuspendComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_unsuspend"
        ],
        "properties" : {
          "user_unsuspend" : {
            "$ref" : "#/components/schemas/UserComplianceSchema"
          }
        }
      },
      "UserWithheld" : {
        "type" : "object",
        "description" : "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).",
        "required" : [
          "country_codes"
        ],
        "properties" : {
          "country_codes" : {
            "type" : "array",
            "description" : "Provides a list of countries where this content is not available.",
            "minItems" : 1,
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            }
          },
          "scope" : {
            "type" : "string",
            "description" : "Indicates that the content being withheld is a `user`.",
            "enum" : [
              "user"
            ]
          }
        }
      },
      "UserWithheldComplianceSchema" : {
        "type" : "object",
        "required" : [
          "user_withheld"
        ],
        "properties" : {
          "user_withheld" : {
            "$ref" : "#/components/schemas/UserTakedownComplianceSchema"
          }
        }
      },
      "UsersDMBlockCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "blocked" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersDMUnBlockCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "blocked" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersFollowingCreateRequest" : {
        "type" : "object",
        "required" : [
          "target_user_id"
        ],
        "properties" : {
          "target_user_id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "UsersFollowingCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "following" : {
                "type" : "boolean"
              },
              "pending_follow" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersFollowingDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "following" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersLikesCreateRequest" : {
        "type" : "object",
        "required" : [
          "tweet_id"
        ],
        "properties" : {
          "tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "UsersLikesCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "liked" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersLikesDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "liked" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersRetweetsCreateRequest" : {
        "type" : "object",
        "required" : [
          "tweet_id"
        ],
        "properties" : {
          "tweet_id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        },
        "additionalProperties" : false
      },
      "UsersRetweetsCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "$ref" : "#/components/schemas/TweetId"
              },
              "retweeted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersRetweetsDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "retweeted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Variant" : {
        "type" : "object",
        "properties" : {
          "bit_rate" : {
            "type" : "integer",
            "description" : "The bit rate of the media."
          },
          "content_type" : {
            "type" : "string",
            "description" : "The content type of the media."
          },
          "url" : {
            "type" : "string",
            "description" : "The url to the media.",
            "format" : "uri"
          }
        }
      },
      "Variants" : {
        "type" : "array",
        "description" : "An array of all available variants of the media.",
        "items" : {
          "$ref" : "#/components/schemas/Variant"
        }
      },
      "Video" : {
        "allOf" : [
          {
            "$ref" : "#/components/schemas/Media"
          },
          {
            "type" : "object",
            "properties" : {
              "duration_ms" : {
                "type" : "integer"
              },
              "non_public_metrics" : {
                "type" : "object",
                "description" : "Nonpublic engagement metrics for the Media at the time of the request.",
                "properties" : {
                  "playback_0_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 0% of the video.",
                    "format" : "int32"
                  },
                  "playback_100_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 100% of the video.",
                    "format" : "int32"
                  },
                  "playback_25_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 25% of the video.",
                    "format" : "int32"
                  },
                  "playback_50_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 50% of the video.",
                    "format" : "int32"
                  },
                  "playback_75_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 75% of the video.",
                    "format" : "int32"
                  }
                }
              },
              "organic_metrics" : {
                "type" : "object",
                "description" : "Organic nonpublic engagement metrics for the Media at the time of the request.",
                "properties" : {
                  "playback_0_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 0% of the video.",
                    "format" : "int32"
                  },
                  "playback_100_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 100% of the video.",
                    "format" : "int32"
                  },
                  "playback_25_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 25% of the video.",
                    "format" : "int32"
                  },
                  "playback_50_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 50% of the video.",
                    "format" : "int32"
                  },
                  "playback_75_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 75% of the video.",
                    "format" : "int32"
                  },
                  "view_count" : {
                    "type" : "integer",
                    "description" : "Number of times this video has been viewed.",
                    "format" : "int32"
                  }
                }
              },
              "preview_image_url" : {
                "type" : "string",
                "format" : "uri"
              },
              "promoted_metrics" : {
                "type" : "object",
                "description" : "Promoted nonpublic engagement metrics for the Media at the time of the request.",
                "properties" : {
                  "playback_0_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 0% of the video.",
                    "format" : "int32"
                  },
                  "playback_100_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 100% of the video.",
                    "format" : "int32"
                  },
                  "playback_25_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 25% of the video.",
                    "format" : "int32"
                  },
                  "playback_50_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 50% of the video.",
                    "format" : "int32"
                  },
                  "playback_75_count" : {
                    "type" : "integer",
                    "description" : "Number of users who made it through 75% of the video.",
                    "format" : "int32"
                  },
                  "view_count" : {
                    "type" : "integer",
                    "description" : "Number of times this video has been viewed.",
                    "format" : "int32"
                  }
                }
              },
              "public_metrics" : {
                "type" : "object",
                "description" : "Engagement metrics for the Media at the time of the request.",
                "properties" : {
                  "view_count" : {
                    "type" : "integer",
                    "description" : "Number of times this video has been viewed.",
                    "format" : "int32"
                  }
                }
              },
              "variants" : {
                "$ref" : "#/components/schemas/Variants"
              }
            }
          }
        ]
      },
      "WebhookConfig" : {
        "type" : "object",
        "description" : "A Webhook Configuration",
        "required" : [
          "id",
          "url",
          "valid",
          "created_at"
        ],
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          },
          "url" : {
            "type" : "string",
            "description" : "The callback URL of the webhook."
          },
          "valid" : {
            "type" : "boolean"
          }
        }
      },
      "WebhookConfigCreateRequest" : {
        "type" : "object",
        "required" : [
          "url"
        ],
        "properties" : {
          "url" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 200
          }
        }
      },
      "WebhookConfigCreateResponse" : {
        "type" : "object",
        "description" : "A Webhook Configuration",
        "required" : [
          "id",
          "url",
          "valid",
          "created_at"
        ],
        "properties" : {
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "$ref" : "#/components/schemas/WebhookConfigId"
          },
          "url" : {
            "type" : "string",
            "description" : "The callback URL of the webhook."
          },
          "valid" : {
            "type" : "boolean"
          }
        }
      },
      "WebhookConfigDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "deleted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "WebhookConfigId" : {
        "type" : "string",
        "description" : "The unique identifier of this webhook config.",
        "pattern" : "^[0-9]{1,19}$",
        "example" : "1146654567674912769"
      },
      "WebhookConfigPutResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "attempted" : {
                "type" : "boolean"
              }
            }
          },
          "errors" : {
            "type" : "array",
            "minItems" : 1,
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      }
    },
    "parameters" : {
      "AnalyticsFieldsParameter" : {
        "name" : "analytics.fields",
        "in" : "query",
        "description" : "A comma separated list of Analytics fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Analytics object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "app_install_attempts",
              "app_opens",
              "bookmarks",
              "detail_expands",
              "email_tweet",
              "engagements",
              "follows",
              "hashtag_clicks",
              "id",
              "impressions",
              "likes",
              "media_views",
              "permalink_clicks",
              "quote_tweets",
              "replies",
              "retweets",
              "shares",
              "timestamp",
              "unfollows",
              "url_clicks",
              "user_profile_clicks"
            ]
          },
          "example" : [
            "app_install_attempts",
            "app_opens",
            "bookmarks",
            "detail_expands",
            "email_tweet",
            "engagements",
            "follows",
            "hashtag_clicks",
            "id",
            "impressions",
            "likes",
            "media_views",
            "permalink_clicks",
            "quote_tweets",
            "replies",
            "retweets",
            "shares",
            "timestamp",
            "unfollows",
            "url_clicks",
            "user_profile_clicks"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "CommunityFieldsParameter" : {
        "name" : "community.fields",
        "in" : "query",
        "description" : "A comma separated list of Community fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Community object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "access",
              "created_at",
              "description",
              "id",
              "join_policy",
              "member_count",
              "name"
            ]
          },
          "example" : [
            "access",
            "created_at",
            "description",
            "id",
            "join_policy",
            "member_count",
            "name"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "ComplianceJobFieldsParameter" : {
        "name" : "compliance_job.fields",
        "in" : "query",
        "description" : "A comma separated list of ComplianceJob fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a ComplianceJob object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "created_at",
              "download_expires_at",
              "download_url",
              "id",
              "name",
              "resumable",
              "status",
              "type",
              "upload_expires_at",
              "upload_url"
            ]
          },
          "example" : [
            "created_at",
            "download_expires_at",
            "download_url",
            "id",
            "name",
            "resumable",
            "status",
            "type",
            "upload_expires_at",
            "upload_url"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "DmConversationFieldsParameter" : {
        "name" : "dm_conversation.fields",
        "in" : "query",
        "description" : "A comma separated list of DmConversation fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a DmConversation object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "id"
            ]
          },
          "example" : [
            "id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "DmEventExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [DmEvent](#DmEvent) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "attachments.media_keys",
              "participant_ids",
              "referenced_tweets.id",
              "sender_id"
            ]
          },
          "example" : [
            "attachments.media_keys",
            "participant_ids",
            "referenced_tweets.id",
            "sender_id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "DmEventFieldsParameter" : {
        "name" : "dm_event.fields",
        "in" : "query",
        "description" : "A comma separated list of DmEvent fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a DmEvent object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "attachments",
              "created_at",
              "dm_conversation_id",
              "entities",
              "event_type",
              "id",
              "participant_ids",
              "referenced_tweets",
              "sender_id",
              "text"
            ]
          },
          "example" : [
            "attachments",
            "created_at",
            "dm_conversation_id",
            "entities",
            "event_type",
            "id",
            "participant_ids",
            "referenced_tweets",
            "sender_id",
            "text"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "EngagementFieldsParameter" : {
        "name" : "engagement.fields",
        "in" : "query",
        "description" : "A comma separated list of Engagement fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Engagement object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "errors",
              "measurement"
            ]
          },
          "example" : [
            "errors",
            "measurement"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "LikeExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [Like](#Like) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "liked_tweet_id"
            ]
          },
          "example" : [
            "liked_tweet_id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "LikeFieldsParameter" : {
        "name" : "like.fields",
        "in" : "query",
        "description" : "A comma separated list of Like fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Like object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "created_at",
              "id",
              "liked_tweet_id",
              "timestamp_ms"
            ]
          },
          "example" : [
            "created_at",
            "id",
            "liked_tweet_id",
            "timestamp_ms"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "LikeWithTweetAuthorExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [LikeWithTweetAuthor](#LikeWithTweetAuthor) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "liked_tweet_author_id",
              "liked_tweet_id"
            ]
          },
          "example" : [
            "liked_tweet_author_id",
            "liked_tweet_id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "LikeWithTweetAuthorFieldsParameter" : {
        "name" : "like_with_tweet_author.fields",
        "in" : "query",
        "description" : "A comma separated list of LikeWithTweetAuthor fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a LikeWithTweetAuthor object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "created_at",
              "id",
              "liked_tweet_author_id",
              "liked_tweet_id",
              "timestamp_ms"
            ]
          },
          "example" : [
            "created_at",
            "id",
            "liked_tweet_author_id",
            "liked_tweet_id",
            "timestamp_ms"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "ListExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [List](#List) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "owner_id"
            ]
          },
          "example" : [
            "owner_id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "ListFieldsParameter" : {
        "name" : "list.fields",
        "in" : "query",
        "description" : "A comma separated list of List fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a List object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "created_at",
              "description",
              "follower_count",
              "id",
              "member_count",
              "name",
              "owner_id",
              "private"
            ]
          },
          "example" : [
            "created_at",
            "description",
            "follower_count",
            "id",
            "member_count",
            "name",
            "owner_id",
            "private"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "MediaAnalyticsFieldsParameter" : {
        "name" : "media_analytics.fields",
        "in" : "query",
        "description" : "A comma separated list of MediaAnalytics fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a MediaAnalytics object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "cta_url_clicks",
              "cta_watch_clicks",
              "media_key",
              "play_from_tap",
              "playback25",
              "playback50",
              "playback75",
              "playback_complete",
              "playback_start",
              "timestamp",
              "video_views",
              "watch_time_ms"
            ]
          },
          "example" : [
            "cta_url_clicks",
            "cta_watch_clicks",
            "media_key",
            "play_from_tap",
            "playback25",
            "playback50",
            "playback75",
            "playback_complete",
            "playback_start",
            "timestamp",
            "video_views",
            "watch_time_ms"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "MediaFieldsParameter" : {
        "name" : "media.fields",
        "in" : "query",
        "description" : "A comma separated list of Media fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Media object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "alt_text",
              "duration_ms",
              "height",
              "media_key",
              "non_public_metrics",
              "organic_metrics",
              "preview_image_url",
              "promoted_metrics",
              "public_metrics",
              "type",
              "url",
              "variants",
              "width"
            ]
          },
          "example" : [
            "alt_text",
            "duration_ms",
            "height",
            "media_key",
            "non_public_metrics",
            "organic_metrics",
            "preview_image_url",
            "promoted_metrics",
            "public_metrics",
            "type",
            "url",
            "variants",
            "width"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "NoteFieldsParameter" : {
        "name" : "note.fields",
        "in" : "query",
        "description" : "A comma separated list of Note fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Note object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "id",
              "status",
              "test_result"
            ]
          },
          "example" : [
            "id",
            "status",
            "test_result"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PersonalizedTrendFieldsParameter" : {
        "name" : "personalized_trend.fields",
        "in" : "query",
        "description" : "A comma separated list of PersonalizedTrend fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a PersonalizedTrend object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "category",
              "post_count",
              "trend_name",
              "trending_since"
            ]
          },
          "example" : [
            "category",
            "post_count",
            "trend_name",
            "trending_since"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PlaceFieldsParameter" : {
        "name" : "place.fields",
        "in" : "query",
        "description" : "A comma separated list of Place fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Place object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "contained_within",
              "country",
              "country_code",
              "full_name",
              "geo",
              "id",
              "name",
              "place_type"
            ]
          },
          "example" : [
            "contained_within",
            "country",
            "country_code",
            "full_name",
            "geo",
            "id",
            "name",
            "place_type"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PlaidAccountContactFieldsParameter" : {
        "name" : "plaid_account_contact.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccountContact fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a PlaidAccountContact object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "addresses",
              "emails",
              "holders",
              "telephones"
            ]
          },
          "example" : [
            "addresses",
            "emails",
            "holders",
            "telephones"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PlaidAccountFieldsParameter" : {
        "name" : "plaid_account.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccount fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a PlaidAccount object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "accountCategory",
              "accountId",
              "accountNumberDisplay",
              "accountType",
              "availableBalance",
              "currency",
              "currentBalance",
              "nickname",
              "productName",
              "status"
            ]
          },
          "example" : [
            "accountCategory",
            "accountId",
            "accountNumberDisplay",
            "accountType",
            "availableBalance",
            "currency",
            "currentBalance",
            "nickname",
            "productName",
            "status"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PlaidAccountPaymentNetworkFieldsParameter" : {
        "name" : "plaid_account_payment_network.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccountPaymentNetwork fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a PlaidAccountPaymentNetwork object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "bankId",
              "identifier",
              "transferIn",
              "transferOut",
              "type"
            ]
          },
          "example" : [
            "bankId",
            "identifier",
            "transferIn",
            "transferOut",
            "type"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PlaidAccountTransactionFieldsParameter" : {
        "name" : "plaid_account_transaction.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidAccountTransaction fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a PlaidAccountTransaction object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "accountCategory",
              "amount",
              "debitCreditMemo",
              "description",
              "postedTimestamp",
              "status",
              "transactionId",
              "transactionTimestamp"
            ]
          },
          "example" : [
            "accountCategory",
            "amount",
            "debitCreditMemo",
            "description",
            "postedTimestamp",
            "status",
            "transactionId",
            "transactionTimestamp"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PlaidCustomerFieldsParameter" : {
        "name" : "plaid_customer.fields",
        "in" : "query",
        "description" : "A comma separated list of PlaidCustomer fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a PlaidCustomer object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "customerId"
            ]
          },
          "example" : [
            "customerId"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "PollFieldsParameter" : {
        "name" : "poll.fields",
        "in" : "query",
        "description" : "A comma separated list of Poll fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Poll object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "duration_minutes",
              "end_datetime",
              "id",
              "options",
              "voting_status"
            ]
          },
          "example" : [
            "duration_minutes",
            "end_datetime",
            "id",
            "options",
            "voting_status"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "RulesCountFieldsParameter" : {
        "name" : "rules_count.fields",
        "in" : "query",
        "description" : "A comma separated list of RulesCount fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a RulesCount object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "all_project_client_apps",
              "cap_per_client_app",
              "cap_per_project",
              "client_app_rules_count",
              "project_rules_count"
            ]
          },
          "example" : [
            "all_project_client_apps",
            "cap_per_client_app",
            "cap_per_project",
            "client_app_rules_count",
            "project_rules_count"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "SearchCountFieldsParameter" : {
        "name" : "search_count.fields",
        "in" : "query",
        "description" : "A comma separated list of SearchCount fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a SearchCount object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "end",
              "start",
              "tweet_count"
            ]
          },
          "example" : [
            "end",
            "start",
            "tweet_count"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "SpaceExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [Space](#Space) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "creator_id",
              "host_ids",
              "invited_user_ids",
              "speaker_ids",
              "topic_ids"
            ]
          },
          "example" : [
            "creator_id",
            "host_ids",
            "invited_user_ids",
            "speaker_ids",
            "topic_ids"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "SpaceFieldsParameter" : {
        "name" : "space.fields",
        "in" : "query",
        "description" : "A comma separated list of Space fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Space object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "created_at",
              "creator_id",
              "ended_at",
              "host_ids",
              "id",
              "invited_user_ids",
              "is_ticketed",
              "lang",
              "participant_count",
              "scheduled_start",
              "speaker_ids",
              "started_at",
              "state",
              "subscriber_count",
              "title",
              "topic_ids",
              "updated_at"
            ]
          },
          "example" : [
            "created_at",
            "creator_id",
            "ended_at",
            "host_ids",
            "id",
            "invited_user_ids",
            "is_ticketed",
            "lang",
            "participant_count",
            "scheduled_start",
            "speaker_ids",
            "started_at",
            "state",
            "subscriber_count",
            "title",
            "topic_ids",
            "updated_at"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "TopicFieldsParameter" : {
        "name" : "topic.fields",
        "in" : "query",
        "description" : "A comma separated list of Topic fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Topic object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "description",
              "id",
              "name"
            ]
          },
          "example" : [
            "description",
            "id",
            "name"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "TrendFieldsParameter" : {
        "name" : "trend.fields",
        "in" : "query",
        "description" : "A comma separated list of Trend fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Trend object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "trend_name",
              "tweet_count"
            ]
          },
          "example" : [
            "trend_name",
            "tweet_count"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "TweetExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "article.cover_media",
              "article.media_entities",
              "attachments.media_keys",
              "attachments.media_source_tweet",
              "attachments.poll_ids",
              "author_id",
              "edit_history_tweet_ids",
              "entities.mentions.username",
              "geo.place_id",
              "in_reply_to_user_id",
              "entities.note.mentions.username",
              "referenced_tweets.id",
              "referenced_tweets.id.attachments.media_keys",
              "referenced_tweets.id.author_id"
            ]
          },
          "example" : [
            "article.cover_media",
            "article.media_entities",
            "attachments.media_keys",
            "attachments.media_source_tweet",
            "attachments.poll_ids",
            "author_id",
            "edit_history_tweet_ids",
            "entities.mentions.username",
            "geo.place_id",
            "in_reply_to_user_id",
            "entities.note.mentions.username",
            "referenced_tweets.id",
            "referenced_tweets.id.attachments.media_keys",
            "referenced_tweets.id.author_id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "TweetFieldsParameter" : {
        "name" : "tweet.fields",
        "in" : "query",
        "description" : "A comma separated list of Tweet fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Tweet object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "article",
              "attachments",
              "author_id",
              "card_uri",
              "community_id",
              "context_annotations",
              "conversation_id",
              "created_at",
              "display_text_range",
              "edit_controls",
              "edit_history_tweet_ids",
              "entities",
              "geo",
              "id",
              "in_reply_to_user_id",
              "lang",
              "media_metadata",
              "non_public_metrics",
              "note_tweet",
              "organic_metrics",
              "possibly_sensitive",
              "promoted_metrics",
              "public_metrics",
              "referenced_tweets",
              "reply_settings",
              "scopes",
              "source",
              "text",
              "withheld"
            ]
          },
          "example" : [
            "article",
            "attachments",
            "author_id",
            "card_uri",
            "community_id",
            "context_annotations",
            "conversation_id",
            "created_at",
            "display_text_range",
            "edit_controls",
            "edit_history_tweet_ids",
            "entities",
            "geo",
            "id",
            "in_reply_to_user_id",
            "lang",
            "media_metadata",
            "non_public_metrics",
            "note_tweet",
            "organic_metrics",
            "possibly_sensitive",
            "promoted_metrics",
            "public_metrics",
            "referenced_tweets",
            "reply_settings",
            "scopes",
            "source",
            "text",
            "withheld"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "UsageFieldsParameter" : {
        "name" : "usage.fields",
        "in" : "query",
        "description" : "A comma separated list of Usage fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a Usage object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "cap_reset_day",
              "daily_client_app_usage",
              "daily_project_usage",
              "project_cap",
              "project_id",
              "project_usage"
            ]
          },
          "example" : [
            "cap_reset_day",
            "daily_client_app_usage",
            "daily_project_usage",
            "project_cap",
            "project_id",
            "project_usage"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "UserExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand.",
        "schema" : {
          "type" : "array",
          "description" : "The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "affiliation.user_id",
              "most_recent_tweet_id",
              "pinned_tweet_id"
            ]
          },
          "example" : [
            "affiliation.user_id",
            "most_recent_tweet_id",
            "pinned_tweet_id"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "UserFieldsParameter" : {
        "name" : "user.fields",
        "in" : "query",
        "description" : "A comma separated list of User fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a User object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "affiliation",
              "confirmed_email",
              "connection_status",
              "created_at",
              "description",
              "entities",
              "id",
              "is_identity_verified",
              "location",
              "most_recent_tweet_id",
              "name",
              "parody",
              "pinned_tweet_id",
              "profile_banner_url",
              "profile_image_url",
              "protected",
              "public_metrics",
              "receives_your_dm",
              "subscription",
              "subscription_type",
              "url",
              "username",
              "verified",
              "verified_followers_count",
              "verified_type",
              "withheld"
            ]
          },
          "example" : [
            "affiliation",
            "confirmed_email",
            "connection_status",
            "created_at",
            "description",
            "entities",
            "id",
            "is_identity_verified",
            "location",
            "most_recent_tweet_id",
            "name",
            "parody",
            "pinned_tweet_id",
            "profile_banner_url",
            "profile_image_url",
            "protected",
            "public_metrics",
            "receives_your_dm",
            "subscription",
            "subscription_type",
            "url",
            "username",
            "verified",
            "verified_followers_count",
            "verified_type",
            "withheld"
          ]
        },
        "explode" : false,
        "style" : "form"
      },
      "WebhookConfigFieldsParameter" : {
        "name" : "webhook_config.fields",
        "in" : "query",
        "description" : "A comma separated list of WebhookConfig fields to display.",
        "required" : false,
        "schema" : {
          "type" : "array",
          "description" : "The fields available for a WebhookConfig object.",
          "minItems" : 1,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [
              "created_at",
              "id",
              "url",
              "valid"
            ]
          },
          "example" : [
            "created_at",
            "id",
            "url",
            "valid"
          ]
        },
        "explode" : false,
        "style" : "form"
      }
    }
  }
}